<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="graph-dsl"><sessioninfo id="travis-job-moaxcp-graph-dsl-317242076.travisci.net-c696bc2a" start="1513399716862" dump="1513399729014"/><sessioninfo id="travis-job-moaxcp-graph-dsl-317242076.travisci.net-ee6b2a02" start="1513399781336" dump="1513399794457"/><sessioninfo id="travis-job-moaxcp-graph-dsl-317242076.travisci.net-29a28ac6" start="1513399973502" dump="1513399985154"/><package name="graph/type/undirected"><class name="graph/type/undirected/GraphType$_convert_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Lgraph/Edge;)Ljava/lang/Object;" line="56"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lgraph/Edge;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/undirected/GraphType$_convert_closure3"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/String;Lgraph/Vertex;)Ljava/lang/Object;" line="62"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/String;Lgraph/Vertex;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="30"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/undirected/EdgeSpecCodeRunner"><method name="&lt;init&gt;" desc="(Lgraph/Graph;Lgraph/Edge;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGraph" desc="()Lgraph/Graph;" line="25"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEdge" desc="()Lgraph/Edge;" line="35"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="changeOne" desc="(Ljava/lang/Object;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="changeOne" desc="(Lgraph/NameSpec;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="changeTwo" desc="(Ljava/lang/Object;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="changeTwo" desc="(Lgraph/NameSpec;)V" line="67"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="methodMissing" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="78"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="propertyMissing" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="88"><counter type="INSTRUCTION" missed="13" covered="43"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertyMissing" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="104"><counter type="INSTRUCTION" missed="2" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="runCode" desc="(Lgroovy/lang/Closure;)V" line="119"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="42" covered="363"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="4" covered="16"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/undirected/VertexSpecCodeRunner"><method name="&lt;init&gt;" desc="(Lgraph/Graph;Lgraph/Vertex;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGraph" desc="()Lgraph/Graph;" line="26"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVertex" desc="()Lgraph/Vertex;" line="34"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="changeKey" desc="(Ljava/lang/Object;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="changeKey" desc="(Lgraph/NameSpec;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connectsTo" desc="([Ljava/lang/Object;)V" line="58"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connectsTo" desc="([Lgraph/NameSpec;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connectsTo" desc="([Lgraph/ConfigSpec;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="methodMissing" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="88"><counter type="INSTRUCTION" missed="11" covered="2"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertyMissing" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="98"><counter type="INSTRUCTION" missed="13" covered="43"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertyMissing" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="113"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="runCode" desc="(Lgroovy/lang/Closure;)V" line="128"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="57" covered="318"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="5" covered="15"/><counter type="COMPLEXITY" missed="3" covered="11"/><counter type="METHOD" missed="1" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/undirected/GraphType"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newEdge" desc="(Ljava/util/Map;)Lgraph/Edge;" line="20"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newVertex" desc="(Ljava/util/Map;)Lgraph/Vertex;" line="25"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newEdgeSpec" desc="(Ljava/util/Map;Lgroovy/lang/Closure;)Lgraph/EdgeSpec;" line="30"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newVertexSpec" desc="(Ljava/util/Map;Lgroovy/lang/Closure;)Lgraph/VertexSpec;" line="35"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canConvert" desc="()Z" line="40"><counter type="INSTRUCTION" missed="9" covered="53"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convert" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="94"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMultiGraph" desc="()Z" line="70"><counter type="INSTRUCTION" missed="9" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDirected" desc="()Z" line="75"><counter type="INSTRUCTION" missed="9" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWeighted" desc="()Z" line="80"><counter type="INSTRUCTION" missed="9" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="traverseEdges" desc="(Ljava/lang/Object;)Ljava/util/Set;" line="89"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newEdgeSpec" desc="(Ljava/util/Map;)Lgraph/EdgeSpec;"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newVertexSpec" desc="(Ljava/util/Map;)Lgraph/VertexSpec;"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGraph" desc="()Lgraph/Graph;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setGraph" desc="(Lgraph/Graph;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="50" covered="261"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="19"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/undirected/VertexSpecCodeRunner$_connectsTo_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="75"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="33"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/undirected/UndirectedVertexSpec"><method name="&lt;init&gt;" desc="(Lgraph/Graph;Ljava/util/Map;Lgroovy/lang/Closure;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lgraph/Graph;Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyClosure" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/undirected/GraphType$_canConvert_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Lgraph/Edge;)Ljava/lang/Object;" line="45"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lgraph/Edge;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEdges" desc="()Ljava/util/Set;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="44"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/undirected/UndirectedEdgeSpec"><method name="&lt;init&gt;" desc="(Lgraph/Graph;Ljava/util/Map;Lgroovy/lang/Closure;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lgraph/Graph;Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyClosure" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="50"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="VertexSpecCodeRunner.groovy"><line nr="17" mi="0" ci="11" mb="0" cb="0"/><line nr="18" mi="0" ci="12" mb="0" cb="0"/><line nr="26" mi="2" ci="3" mb="0" cb="0"/><line nr="34" mi="2" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="36" mb="0" cb="0"/><line nr="50" mi="0" ci="40" mb="0" cb="0"/><line nr="58" mi="0" ci="36" mb="0" cb="0"/><line nr="66" mi="0" ci="40" mb="0" cb="0"/><line nr="74" mi="0" ci="11" mb="0" cb="0"/><line nr="75" mi="2" ci="24" mb="0" cb="0"/><line nr="77" mi="0" ci="21" mb="0" cb="0"/><line nr="88" mi="11" ci="0" mb="0" cb="0"/><line nr="98" mi="0" ci="9" mb="1" cb="1"/><line nr="99" mi="11" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="32" mb="0" cb="0"/><line nr="113" mi="4" ci="0" mb="2" cb="0"/><line nr="114" mi="8" ci="0" mb="0" cb="0"/><line nr="116" mi="15" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="10" mb="0" cb="0"/><line nr="129" mi="0" ci="14" mb="0" cb="0"/><line nr="130" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="67" covered="351"/><counter type="BRANCH" missed="3" covered="1"/><counter type="LINE" missed="5" covered="16"/><counter type="COMPLEXITY" missed="4" covered="13"/><counter type="METHOD" missed="2" covered="13"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="UndirectedEdgeSpec.groovy"><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="7" mb="0" cb="2"/><line nr="17" mi="0" ci="21" mb="0" cb="0"/><line nr="18" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="50"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EdgeSpecCodeRunner.groovy"><line nr="16" mi="0" ci="11" mb="0" cb="0"/><line nr="17" mi="0" ci="12" mb="0" cb="0"/><line nr="25" mi="5" ci="0" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="49" mb="0" cb="0"/><line nr="51" mi="0" ci="53" mb="0" cb="0"/><line nr="59" mi="0" ci="49" mb="0" cb="0"/><line nr="67" mi="0" ci="53" mb="0" cb="0"/><line nr="78" mi="11" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="9" mb="1" cb="1"/><line nr="89" mi="11" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="32" mb="0" cb="0"/><line nr="104" mi="0" ci="4" mb="0" cb="2"/><line nr="105" mi="0" ci="8" mb="0" cb="0"/><line nr="107" mi="0" ci="4" mb="0" cb="2"/><line nr="108" mi="0" ci="8" mb="0" cb="0"/><line nr="110" mi="2" ci="13" mb="0" cb="0"/><line nr="119" mi="0" ci="10" mb="0" cb="0"/><line nr="120" mi="0" ci="14" mb="0" cb="0"/><line nr="121" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="42" covered="363"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="4" covered="16"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="GraphType.groovy"><line nr="20" mi="2" ci="10" mb="0" cb="0"/><line nr="25" mi="2" ci="10" mb="0" cb="0"/><line nr="30" mi="2" ci="13" mb="0" cb="0"/><line nr="35" mi="2" ci="13" mb="0" cb="0"/><line nr="40" mi="0" ci="14" mb="0" cb="2"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="13" mb="0" cb="0"/><line nr="44" mi="9" ci="22" mb="0" cb="2"/><line nr="45" mi="0" ci="12" mb="0" cb="0"/><line nr="46" mi="2" ci="15" mb="0" cb="2"/><line nr="52" mi="0" ci="11" mb="0" cb="4"/><line nr="53" mi="0" ci="34" mb="0" cb="0"/><line nr="55" mi="0" ci="12" mb="0" cb="0"/><line nr="56" mi="2" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="12" mb="0" cb="0"/><line nr="61" mi="0" ci="12" mb="0" cb="0"/><line nr="62" mi="2" ci="21" mb="0" cb="0"/><line nr="65" mi="0" ci="11" mb="0" cb="0"/><line nr="70" mi="9" ci="2" mb="0" cb="0"/><line nr="75" mi="9" ci="2" mb="0" cb="0"/><line nr="80" mi="9" ci="2" mb="0" cb="0"/><line nr="89" mi="2" ci="11" mb="0" cb="0"/><counter type="INSTRUCTION" missed="101" covered="351"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="4" covered="26"/><counter type="METHOD" missed="4" covered="21"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="UndirectedVertexSpec.groovy"><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="7" mb="0" cb="2"/><line nr="17" mi="0" ci="21" mb="0" cb="0"/><line nr="18" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="218" covered="1173"/><counter type="BRANCH" missed="4" covered="20"/><counter type="LINE" missed="9" covered="62"/><counter type="COMPLEXITY" missed="13" covered="56"/><counter type="METHOD" missed="10" covered="47"/><counter type="CLASS" missed="0" covered="9"/></package><package name="graph/plugin"><class name="graph/plugin/GraphViz$_image_closure8"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="116"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="graph/plugin/GraphViz$_dot_closure6$_closure10"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;Lgraph/Vertex;)Ljava/lang/Object;" line="83"><counter type="INSTRUCTION" missed="5" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/Object;Lgraph/Vertex;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getP" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="42"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/plugin/GraphViz$_image_closure7"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="103"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="graph/plugin/GraphViz$_dot_closure6"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="76"><counter type="INSTRUCTION" missed="2" covered="121"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="128"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/plugin/GraphViz$_getEdgeDot_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="48"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/plugin/GraphViz$_getEdgeDot_closure3"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="50"><counter type="INSTRUCTION" missed="2" covered="38"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="45"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/plugin/GraphViz$_getVertexDot_closure5"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="64"><counter type="INSTRUCTION" missed="2" covered="38"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="45"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/plugin/GraphViz$_getVertexDot_closure4"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="62"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/plugin/GraphViz"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lgraph/Graph;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgeString" desc="()Ljava/lang/String;" line="24"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGraphString" desc="()Ljava/lang/String;" line="29"><counter type="INSTRUCTION" missed="4" covered="50"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgeDot" desc="(Lgraph/Edge;)Ljava/lang/String;" line="46"><counter type="INSTRUCTION" missed="2" covered="136"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVertexDot" desc="(Lgraph/Vertex;)Ljava/lang/String;" line="60"><counter type="INSTRUCTION" missed="2" covered="85"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dot" desc="()Ljava/lang/String;" line="73"><counter type="INSTRUCTION" missed="2" covered="37"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dot" desc="(Ljava/lang/String;)V" line="97"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="image" desc="()Ljava/util/Map;" line="101"><counter type="INSTRUCTION" missed="122" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="image" desc="(Ljava/lang/String;)V" line="115"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="view" desc="()V" line="121"><counter type="INSTRUCTION" missed="94" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="memoizedMethodPriv$getIdString" desc="(Ljava/lang/String;)Ljava/lang/String;" line="35"><counter type="INSTRUCTION" missed="8" covered="36"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGraph" desc="()Lgraph/Graph;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setGraph" desc="(Lgraph/Graph;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="257" covered="443"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="16" covered="22"/><counter type="COMPLEXITY" missed="5" covered="18"/><counter type="METHOD" missed="3" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/plugin/GraphViz$_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="16"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/plugin/GraphViz$_dot_closure6$_closure9"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="80"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getP" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="31"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="GraphViz.groovy"><line nr="19" mi="0" ci="12" mb="0" cb="0"/><line nr="24" mi="2" ci="12" mb="0" cb="2"/><line nr="29" mi="4" ci="48" mb="1" cb="3"/><line nr="35" mi="0" ci="4" mb="0" cb="2"/><line nr="36" mi="3" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="2"/><line nr="38" mi="3" ci="2" mb="0" cb="0"/><line nr="40" mi="2" ci="22" mb="0" cb="0"/><line nr="46" mi="0" ci="70" mb="0" cb="0"/><line nr="47" mi="0" ci="29" mb="0" cb="0"/><line nr="48" mi="2" ci="21" mb="0" cb="4"/><line nr="50" mi="2" ci="36" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="2"/><line nr="53" mi="0" ci="30" mb="0" cb="0"/><line nr="55" mi="2" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="19" mb="0" cb="0"/><line nr="61" mi="0" ci="29" mb="0" cb="0"/><line nr="62" mi="2" ci="9" mb="0" cb="0"/><line nr="64" mi="2" ci="36" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="2"/><line nr="67" mi="0" ci="30" mb="0" cb="0"/><line nr="69" mi="2" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="11" mb="0" cb="0"/><line nr="75" mi="0" ci="16" mb="0" cb="0"/><line nr="76" mi="0" ci="12" mb="0" cb="0"/><line nr="77" mi="0" ci="30" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="21" mb="0" cb="0"/><line nr="80" mi="2" ci="14" mb="0" cb="0"/><line nr="82" mi="0" ci="21" mb="0" cb="0"/><line nr="83" mi="0" ci="9" mb="0" cb="2"/><line nr="84" mi="5" ci="16" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="89" mi="0" ci="8" mb="0" cb="0"/><line nr="90" mi="2" ci="7" mb="0" cb="0"/><line nr="93" mi="2" ci="8" mb="0" cb="0"/><line nr="97" mi="0" ci="17" mb="0" cb="0"/><line nr="101" mi="39" ci="0" mb="2" cb="0"/><line nr="102" mi="15" ci="0" mb="0" cb="0"/><line nr="103" mi="13" ci="0" mb="0" cb="0"/><line nr="105" mi="11" ci="0" mb="0" cb="0"/><line nr="106" mi="7" ci="0" mb="0" cb="0"/><line nr="108" mi="16" ci="0" mb="0" cb="0"/><line nr="109" mi="6" ci="0" mb="0" cb="0"/><line nr="111" mi="26" ci="0" mb="0" cb="0"/><line nr="115" mi="17" ci="0" mb="0" cb="0"/><line nr="116" mi="19" ci="0" mb="0" cb="0"/><line nr="121" mi="13" ci="0" mb="0" cb="0"/><line nr="122" mi="11" ci="0" mb="0" cb="0"/><line nr="123" mi="29" ci="0" mb="0" cb="0"/><line nr="124" mi="11" ci="0" mb="0" cb="0"/><line nr="125" mi="7" ci="0" mb="0" cb="0"/><line nr="126" mi="6" ci="0" mb="0" cb="0"/><line nr="127" mi="7" ci="0" mb="0" cb="0"/><line nr="128" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="405" covered="798"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="18" covered="37"/><counter type="COMPLEXITY" missed="18" covered="37"/><counter type="METHOD" missed="16" covered="28"/><counter type="CLASS" missed="2" covered="9"/></sourcefile><counter type="INSTRUCTION" missed="405" covered="798"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="18" covered="37"/><counter type="COMPLEXITY" missed="18" covered="37"/><counter type="METHOD" missed="16" covered="28"/><counter type="CLASS" missed="2" covered="9"/></package><package name="graph/type/directed"><class name="graph/type/directed/DirectedGraphType$_inEdges_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="72"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKey" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="28"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/directed/DirectedGraphType$_canConvert_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Lgraph/Edge;)Ljava/lang/Object;" line="54"><counter type="INSTRUCTION" missed="4" covered="27"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lgraph/Edge;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEdges" desc="()Ljava/util/Set;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="42"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/directed/DirectedVertexSpecCodeRunner"><method name="&lt;init&gt;" desc="(Lgraph/Graph;Lgraph/Vertex;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connectsFrom" desc="([Ljava/lang/Object;)V" line="23"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connectsFrom" desc="([Lgraph/NameSpec;)V" line="31"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connectsFrom" desc="([Lgraph/ConfigSpec;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="133"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/directed/DirectedGraphType$_outEdges_closure3"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="94"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKey" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="28"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/directed/DirectedGraphType"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newEdge" desc="(Ljava/util/Map;)Lgraph/Edge;" line="34"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newVertexSpec" desc="(Ljava/util/Map;Lgroovy/lang/Closure;)Lgraph/type/directed/DirectedVertexSpec;" line="44"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canConvert" desc="()Z" line="49"><counter type="INSTRUCTION" missed="10" covered="58"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDirected" desc="()Z" line="61"><counter type="INSTRUCTION" missed="9" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inEdges" desc="(Ljava/lang/Object;)Ljava/util/Set;" line="71"><counter type="INSTRUCTION" missed="2" covered="31"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inDegree" desc="(Ljava/lang/Object;)I" line="83"><counter type="INSTRUCTION" missed="3" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outEdges" desc="(Ljava/lang/Object;)Ljava/util/Set;" line="93"><counter type="INSTRUCTION" missed="2" covered="31"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outDegree" desc="(Ljava/lang/Object;)I" line="105"><counter type="INSTRUCTION" missed="3" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="traverseEdges" desc="(Ljava/lang/Object;)Ljava/util/Set;" line="115"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reversePostOrderSort" desc="()Ljava/util/Deque;" line="123"><counter type="INSTRUCTION" missed="2" covered="35"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reversePostOrder" desc="(Lgroovy/lang/Closure;)V" line="137"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newVertexSpec" desc="(Ljava/util/Map;)Lgraph/type/directed/DirectedVertexSpec;"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="39" covered="289"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="1" covered="14"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/directed/DirectedVertexSpec$_applyConnectsFrom_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="30"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="29"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/directed/DirectedGraphType$_reversePostOrderSort_closure4"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="125"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDeque" desc="()Ljava/util/Deque;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="37"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/directed/DirectedGraphType$_reversePostOrder_closure5"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="139"><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClosure" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="39"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/directed/DirectedVertexSpec$_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="24"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/directed/DirectedVertexSpecCodeRunner$_connectsFrom_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="40"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="33"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/directed/DirectedEdge"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Lgraph/type/directed/DirectedEdge;)Z" line="15"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="25"><counter type="INSTRUCTION" missed="11" covered="34"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="69"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/directed/DirectedGraphType$_reversePostOrderSort_closure4$_closure6"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="126"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDeque" desc="()Ljava/util/Deque;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="30"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/directed/DirectedVertexSpec"><method name="&lt;init&gt;" desc="(Lgraph/Graph;Ljava/util/Map;Lgroovy/lang/Closure;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lgraph/Graph;Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="applyConnectsFrom" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyClosure" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="()Lgraph/Vertex;" line="48"><counter type="INSTRUCTION" missed="2" covered="58"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="151"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DirectedEdge.groovy"><line nr="15" mi="9" ci="28" mb="0" cb="4"/><line nr="25" mi="0" ci="7" mb="0" cb="4"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="8" mb="1" cb="1"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="0" ci="7" mb="0" cb="0"/><line nr="32" mi="9" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="69"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DirectedGraphType.groovy"><line nr="34" mi="2" ci="10" mb="0" cb="0"/><line nr="44" mi="2" ci="16" mb="0" cb="0"/><line nr="49" mi="0" ci="17" mb="0" cb="2"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="13" mb="0" cb="0"/><line nr="53" mi="10" ci="24" mb="1" cb="1"/><line nr="54" mi="0" ci="12" mb="0" cb="0"/><line nr="55" mi="4" ci="13" mb="1" cb="1"/><line nr="61" mi="9" ci="2" mb="0" cb="0"/><line nr="71" mi="2" ci="23" mb="0" cb="0"/><line nr="72" mi="2" ci="11" mb="0" cb="0"/><line nr="83" mi="3" ci="16" mb="0" cb="0"/><line nr="93" mi="2" ci="23" mb="0" cb="0"/><line nr="94" mi="2" ci="11" mb="0" cb="0"/><line nr="105" mi="3" ci="16" mb="0" cb="0"/><line nr="115" mi="2" ci="14" mb="0" cb="0"/><line nr="123" mi="0" ci="13" mb="0" cb="0"/><line nr="124" mi="0" ci="16" mb="0" cb="0"/><line nr="125" mi="2" ci="14" mb="0" cb="0"/><line nr="126" mi="2" ci="13" mb="0" cb="0"/><line nr="129" mi="2" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="15" mb="0" cb="0"/><line nr="138" mi="0" ci="13" mb="0" cb="0"/><line nr="139" mi="2" ci="22" mb="0" cb="0"/><counter type="INSTRUCTION" missed="150" covered="493"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="12" covered="27"/><counter type="METHOD" missed="10" covered="26"/><counter type="CLASS" missed="0" covered="7"/></sourcefile><sourcefile name="DirectedVertexSpecCodeRunner.groovy"><line nr="15" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="42" mb="0" cb="0"/><line nr="31" mi="0" ci="46" mb="0" cb="0"/><line nr="39" mi="0" ci="11" mb="0" cb="0"/><line nr="40" mi="2" ci="24" mb="0" cb="0"/><line nr="42" mi="0" ci="21" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="166"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="DirectedVertexSpec.groovy"><line nr="14" mi="0" ci="13" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="23" mi="0" ci="16" mb="0" cb="0"/><line nr="24" mi="2" ci="20" mb="0" cb="2"/><line nr="29" mi="0" ci="13" mb="0" cb="0"/><line nr="30" mi="2" ci="20" mb="0" cb="0"/><line nr="35" mi="0" ci="7" mb="0" cb="2"/><line nr="36" mi="0" ci="21" mb="0" cb="0"/><line nr="37" mi="0" ci="12" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="11" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="2" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="30" covered="209"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="3" covered="10"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><counter type="INSTRUCTION" missed="210" covered="937"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="1" covered="53"/><counter type="COMPLEXITY" missed="17" covered="50"/><counter type="METHOD" missed="14" covered="43"/><counter type="CLASS" missed="0" covered="13"/></package><package name="graph/type/weighted"><class name="graph/type/weighted/WeightedDirectedGraphType"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convert" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWeighted" desc="()Z" line="15"><counter type="INSTRUCTION" missed="9" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="38"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/weighted/WeightedEdgeComparator"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Lgraph/Edge;Lgraph/Edge;)I" line="11"><counter type="INSTRUCTION" missed="18" covered="101"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="115"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/weighted/WeightedGraphType"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convert" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWeighted" desc="()Z" line="19"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="34"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="WeightedEdgeComparator.groovy"><line nr="11" mi="0" ci="4" mb="0" cb="2"/><line nr="12" mi="0" ci="2" mb="0" cb="0"/><line nr="14" mi="0" ci="16" mb="0" cb="2"/><line nr="15" mi="0" ci="16" mb="0" cb="2"/><line nr="17" mi="0" ci="4" mb="0" cb="2"/><line nr="18" mi="3" ci="4" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="2"/><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="15" mb="0" cb="0"/><line nr="23" mi="0" ci="15" mb="0" cb="0"/><line nr="24" mi="0" ci="7" mb="0" cb="4"/><line nr="25" mi="3" ci="2" mb="0" cb="0"/><line nr="26" mi="1" ci="6" mb="2" cb="2"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="115"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WeightedGraphType.groovy"><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="14" mi="0" ci="21" mb="0" cb="0"/><line nr="19" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="34"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WeightedDirectedGraphType.groovy"><line nr="8" mi="0" ci="6" mb="0" cb="0"/><line nr="10" mi="0" ci="21" mb="0" cb="0"/><line nr="15" mi="9" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="38"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="40" covered="187"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="2" covered="19"/><counter type="COMPLEXITY" missed="3" covered="14"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="3"/></package><package name="graph/type"><class name="graph/type/AbstractEdgeSpec$_checkConditions_closure4"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="77"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRenamed" desc="()Lgraph/Edge;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/AbstractVertexSpec$_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="35"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/AbstractVertexSpec$_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="29"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/AbstractEdgeSpec"><method name="&lt;init&gt;" desc="(Lgraph/Graph;Ljava/util/Map;Lgroovy/lang/Closure;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="142"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lgraph/Graph;Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="init" desc="()Ljava/lang/Object;" line="41"><counter type="INSTRUCTION" missed="2" covered="226"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkConditions" desc="()V" line="63"><counter type="INSTRUCTION" missed="0" covered="167"/><counter type="BRANCH" missed="0" covered="28"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setupGraph" desc="()V" line="84"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initRenameOne" desc="()V" line="94"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initRenameTwo" desc="()V" line="101"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initEntries" desc="()V" line="108"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="()Lgraph/Edge;" line="114"><counter type="INSTRUCTION" missed="2" covered="55"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdge" desc="()Lgraph/Edge;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setEdge" desc="(Lgraph/Edge;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgePresentInGraph" desc="()Z"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEdgePresentInGraph" desc="()Z"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setEdgePresentInGraph" desc="(Z)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOne" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOne" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTwo" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setTwo" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChangeOne" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setChangeOne" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChangeTwo" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setChangeTwo" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getDslProperties" desc="()Ljava/util/List;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDslProperties" desc="(Ljava/util/List;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntries" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setEntries" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRunnerCodeClosure" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRunnerCodeClosure" desc="(Lgroovy/lang/Closure;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="57" covered="753"/><counter type="BRANCH" missed="0" covered="58"/><counter type="LINE" missed="0" covered="55"/><counter type="COMPLEXITY" missed="14" covered="43"/><counter type="METHOD" missed="14" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/AbstractVertexSpec"><method name="&lt;init&gt;" desc="(Lgraph/Graph;Ljava/util/Map;Lgroovy/lang/Closure;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="125"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lgraph/Graph;Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="init" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="113"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initEntries" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkConditions" desc="()V" line="56"><counter type="INSTRUCTION" missed="20" covered="63"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyRename" desc="()V" line="73"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyConnectsTo" desc="()V" line="79"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="()Lgraph/Vertex;" line="87"><counter type="INSTRUCTION" missed="2" covered="49"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVertex" desc="()Lgraph/Vertex;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setVertex" desc="(Lgraph/Vertex;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKey" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setKey" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChangeKey" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setChangeKey" desc="(Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConnectsToSet" desc="()Ljava/util/Set;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDslProperties" desc="()Ljava/util/List;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDslProperties" desc="(Ljava/util/List;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEntries" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setEntries" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRunnerCodeClosure" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRunnerCodeClosure" desc="(Lgroovy/lang/Closure;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="63" covered="410"/><counter type="BRANCH" missed="4" covered="26"/><counter type="LINE" missed="2" covered="33"/><counter type="COMPLEXITY" missed="14" covered="22"/><counter type="METHOD" missed="10" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/AbstractEdgeSpec$_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="30"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/AbstractVertexSpec$_applyConnectsTo_closure3"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="80"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="29"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/AbstractEdgeSpec$_init_closure3"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="55"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCreated" desc="()Lgraph/Edge;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/AbstractEdgeSpec$_init_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="45"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCreated" desc="()Lgraph/Edge;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AbstractEdgeSpec.groovy"><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="26" mb="0" cb="0"/><line nr="30" mi="2" ci="37" mb="0" cb="2"/><line nr="32" mi="0" ci="12" mb="0" cb="0"/><line nr="33" mi="0" ci="12" mb="0" cb="0"/><line nr="34" mi="0" ci="29" mb="0" cb="2"/><line nr="35" mi="0" ci="29" mb="0" cb="2"/><line nr="37" mi="0" ci="9" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="2"/><line nr="42" mi="0" ci="8" mb="0" cb="0"/><line nr="44" mi="0" ci="40" mb="0" cb="0"/><line nr="45" mi="2" ci="32" mb="0" cb="0"/><line nr="46" mi="0" ci="10" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="4"/><line nr="49" mi="0" ci="17" mb="0" cb="2"/><line nr="50" mi="0" ci="17" mb="0" cb="2"/><line nr="51" mi="0" ci="8" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="0"/><line nr="53" mi="0" ci="13" mb="0" cb="0"/><line nr="54" mi="0" ci="13" mb="0" cb="0"/><line nr="55" mi="2" ci="34" mb="0" cb="0"/><line nr="56" mi="0" ci="10" mb="0" cb="0"/><line nr="59" mi="2" ci="17" mb="0" cb="2"/><line nr="63" mi="0" ci="8" mb="0" cb="4"/><line nr="64" mi="0" ci="8" mb="0" cb="0"/><line nr="66" mi="0" ci="8" mb="0" cb="4"/><line nr="67" mi="0" ci="8" mb="0" cb="0"/><line nr="69" mi="0" ci="11" mb="0" cb="4"/><line nr="70" mi="0" ci="8" mb="0" cb="0"/><line nr="72" mi="0" ci="8" mb="0" cb="4"/><line nr="73" mi="0" ci="8" mb="0" cb="0"/><line nr="75" mi="0" ci="12" mb="0" cb="6"/><line nr="76" mi="0" ci="56" mb="0" cb="4"/><line nr="77" mi="2" ci="28" mb="0" cb="2"/><line nr="78" mi="0" ci="9" mb="0" cb="0"/><line nr="84" mi="0" ci="19" mb="0" cb="10"/><line nr="86" mi="0" ci="22" mb="0" cb="0"/><line nr="89" mi="0" ci="12" mb="0" cb="0"/><line nr="90" mi="0" ci="13" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="2"/><line nr="95" mi="0" ci="12" mb="0" cb="0"/><line nr="96" mi="0" ci="13" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="2"/><line nr="102" mi="0" ci="12" mb="0" cb="0"/><line nr="103" mi="0" ci="13" mb="0" cb="0"/><line nr="108" mi="0" ci="10" mb="0" cb="0"/><line nr="114" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="119" mi="0" ci="6" mb="0" cb="0"/><line nr="120" mi="0" ci="8" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="2" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="130" covered="851"/><counter type="BRANCH" missed="0" covered="60"/><counter type="LINE" missed="0" covered="55"/><counter type="COMPLEXITY" missed="21" covered="52"/><counter type="METHOD" missed="21" covered="22"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="AbstractVertexSpec.groovy"><line nr="19" mi="0" ci="13" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="22" mb="0" cb="0"/><line nr="29" mi="2" ci="37" mb="0" cb="2"/><line nr="31" mi="0" ci="12" mb="0" cb="0"/><line nr="32" mi="0" ci="29" mb="0" cb="2"/><line nr="34" mi="0" ci="15" mb="0" cb="0"/><line nr="35" mi="2" ci="20" mb="0" cb="2"/><line nr="37" mi="0" ci="9" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="2"/><line nr="42" mi="0" ci="8" mb="0" cb="0"/><line nr="44" mi="0" ci="21" mb="0" cb="4"/><line nr="45" mi="0" ci="17" mb="0" cb="2"/><line nr="46" mi="0" ci="8" mb="0" cb="0"/><line nr="48" mi="0" ci="53" mb="0" cb="2"/><line nr="52" mi="0" ci="10" mb="0" cb="0"/><line nr="56" mi="0" ci="8" mb="0" cb="4"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="59" mi="2" ci="9" mb="2" cb="2"/><line nr="60" mi="8" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="6" mb="2" cb="2"/><line nr="63" mi="8" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="2"/><line nr="66" mi="0" ci="17" mb="0" cb="2"/><line nr="67" mi="0" ci="9" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="2"/><line nr="74" mi="0" ci="15" mb="0" cb="0"/><line nr="79" mi="0" ci="13" mb="0" cb="0"/><line nr="80" mi="2" ci="20" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="8" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="94" mi="2" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="93" covered="494"/><counter type="BRANCH" missed="4" covered="30"/><counter type="LINE" missed="2" covered="35"/><counter type="COMPLEXITY" missed="17" covered="30"/><counter type="METHOD" missed="13" covered="17"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><counter type="INSTRUCTION" missed="223" covered="1345"/><counter type="BRANCH" missed="4" covered="90"/><counter type="LINE" missed="2" covered="90"/><counter type="COMPLEXITY" missed="38" covered="82"/><counter type="METHOD" missed="34" covered="39"/><counter type="CLASS" missed="0" covered="9"/></package><package name="graph"><class name="graph/TraversalSpec"><method name="&lt;init&gt;" desc="()V" line="16"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="root" desc="(Lgraph/NameSpec;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertyMissing" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="33"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRoot" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRoot" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRoots" desc="()Ljava/util/Set;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setRoots" desc="(Ljava/util/Set;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getColors" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setColors" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="84"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Graph$_methodMissing_closure15"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="1116"><counter type="INSTRUCTION" missed="2" covered="40"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getArgs" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="63"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Graph$_methodMissing_closure16"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="1122"><counter type="INSTRUCTION" missed="2" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Graph$_vertex_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="243"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSet" desc="()Ljava/util/Set;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="26"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Graph$_vertex_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="241"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Graph$_changeKey_closure3"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="272"><counter type="INSTRUCTION" missed="5" covered="48"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKey" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNewKey" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="71"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Graph$_findBfs_closure10$_closure18"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="901"><counter type="INSTRUCTION" missed="5" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClosure" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResult" desc="()Lgraph/Vertex;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="55"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/EdgeSpec"><method name="&lt;init&gt;" desc="(Lgraph/Graph;)V" line="10"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(Lgraph/Edge;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMetaClass" desc="()Lgroovy/lang/MetaClass;"><counter type="INSTRUCTION" missed="8" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMetaClass" desc="(Lgroovy/lang/MetaClass;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeMethod" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProperty" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setProperty" desc="(Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGraph" desc="()Lgraph/Graph;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setGraph" desc="(Lgraph/Graph;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="61"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Graph$_classifyEdges_closure14"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="1083"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEc" desc="()Lgraph/EdgeClassification;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAction" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="47"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Graph"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="79"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="graph" desc="(Lgroovy/lang/Closure;)Lgraph/Graph;" line="71"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVertices" desc="()Ljava/util/Map;" line="81"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="delete" desc="(Ljava/lang/Object;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdges" desc="()Ljava/util/Set;" line="105"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(Lgraph/Edge;)Z" line="115"><counter type="INSTRUCTION" missed="9" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceEdges" desc="(Lgroovy/lang/Closure;)V" line="123"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceEdgesSet" desc="(Ljava/util/Set;)V" line="133"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceVertices" desc="(Lgroovy/lang/Closure;)V" line="141"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceVerticesMap" desc="(Ljava/util/Map;)V" line="147"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteEdge" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="164"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="type" desc="(Ljava/lang/Class;)V" line="168"><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="type" desc="(Ljava/lang/String;)V" line="177"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plugin" desc="(Ljava/lang/Class;)V" line="183"><counter type="INSTRUCTION" missed="0" covered="74"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plugin" desc="(Ljava/lang/String;)V" line="192"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Lgraph/type/Type;" line="198"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertex" desc="(Lgraph/Vertex;)Z" line="208"><counter type="INSTRUCTION" missed="9" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertex" desc="(Ljava/lang/Object;)Lgraph/Vertex;" line="218"><counter type="INSTRUCTION" missed="2" covered="44"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertex" desc="(Lgraph/NameSpec;)Lgraph/Vertex;" line="228"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertex" desc="(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/Set;" line="238"><counter type="INSTRUCTION" missed="2" covered="56"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertex" desc="(Lgraph/NameSpec;[Lgraph/NameSpec;)Ljava/util/Set;" line="255"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="changeKey" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="264"><counter type="INSTRUCTION" missed="0" covered="120"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="changeKey" desc="(Lgraph/NameSpec;Lgraph/NameSpec;)V" line="287"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertex" desc="(Ljava/util/Map;)Lgraph/Vertex;" line="314"><counter type="INSTRUCTION" missed="2" covered="34"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertex" desc="(Ljava/lang/Object;Lgroovy/lang/Closure;)Lgraph/Vertex;" line="353"><counter type="INSTRUCTION" missed="2" covered="52"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertex" desc="(Lgraph/NameSpec;Lgroovy/lang/Closure;)Lgraph/Vertex;" line="365"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertex" desc="(Ljava/lang/Object;Ljava/util/Map;)Lgraph/Vertex;" line="376"><counter type="INSTRUCTION" missed="2" covered="55"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertex" desc="(Lgraph/NameSpec;Ljava/util/Map;)Lgraph/Vertex;" line="389"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertex" desc="(Ljava/util/Map;Lgroovy/lang/Closure;)Lgraph/Vertex;" line="401"><counter type="INSTRUCTION" missed="2" covered="42"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertex" desc="(Ljava/lang/Object;Ljava/util/Map;Lgroovy/lang/Closure;)Lgraph/Vertex;" line="415"><counter type="INSTRUCTION" missed="2" covered="63"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertex" desc="(Lgraph/NameSpec;Ljava/util/Map;Lgroovy/lang/Closure;)Lgraph/Vertex;" line="430"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertex" desc="(Lgraph/ConfigSpec;)Lgraph/Vertex;" line="440"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edge" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lgraph/Edge;" line="452"><counter type="INSTRUCTION" missed="2" covered="52"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edge" desc="(Lgraph/NameSpec;Lgraph/NameSpec;)Lgraph/Edge;" line="464"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edge" desc="(Ljava/util/Map;)Lgraph/Edge;" line="494"><counter type="INSTRUCTION" missed="2" covered="34"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edge" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;)Lgraph/Edge;" line="508"><counter type="INSTRUCTION" missed="2" covered="76"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edge" desc="(Lgraph/NameSpec;Lgraph/NameSpec;Ljava/util/Map;)Lgraph/Edge;" line="524"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edge" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Closure;)Lgraph/Edge;" line="562"><counter type="INSTRUCTION" missed="2" covered="60"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edge" desc="(Lgraph/NameSpec;Lgraph/NameSpec;Lgroovy/lang/Closure;)Lgraph/Edge;" line="575"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edge" desc="(Ljava/util/Map;Lgroovy/lang/Closure;)Lgraph/Edge;" line="588"><counter type="INSTRUCTION" missed="2" covered="42"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edge" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;Lgroovy/lang/Closure;)Lgraph/Edge;" line="604"><counter type="INSTRUCTION" missed="2" covered="84"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edge" desc="(Lgraph/NameSpec;Lgraph/NameSpec;Ljava/util/Map;Lgroovy/lang/Closure;)Lgraph/Edge;" line="622"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="configEdge" desc="(Lgraph/ConfigSpec;)Lgraph/Edge;" line="632"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnvisitedVertexName" desc="(Ljava/util/Map;)Ljava/lang/String;" line="642"><counter type="INSTRUCTION" missed="2" covered="27"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnvisitedChildName" desc="(Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/Object;" line="655"><counter type="INSTRUCTION" missed="2" covered="79"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnvisitedChildName" desc="(Lgraph/NameSpec;Ljava/util/Map;)Ljava/lang/String;" line="676"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnvisitedChildName" desc="(Lgraph/ConfigSpec;)Ljava/lang/Object;" line="685"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="adjacentEdges" desc="(Ljava/lang/Object;)Ljava/util/Set;" line="694"><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="adjacentEdges" desc="(Lgraph/NameSpec;)Ljava/util/Set;" line="705"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="traverseEdges" desc="(Lgraph/NameSpec;)Ljava/util/Set;" line="714"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeColorMap" desc="()Ljava/util/Map;" line="723"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="depthFirstTraversal" desc="(Ljava/lang/String;Lgroovy/lang/Closure;)Lgraph/Graph$Traversal;" line="736"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="depthFirstTraversal" desc="(Lgraph/NameSpec;Lgroovy/lang/Closure;)Lgraph/Graph$Traversal;" line="748"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="depthFirstTraversalSpec" desc="(Ljava/lang/String;Lgroovy/lang/Closure;)Lgraph/DepthFirstTraversalSpec;" line="761"><counter type="INSTRUCTION" missed="2" covered="48"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setupSpec" desc="(Lgraph/TraversalSpec;)V" line="776"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="breadthFirstTraversalSpec" desc="(Ljava/lang/String;Lgroovy/lang/Closure;)Lgraph/BreadthFirstTraversalSpec;" line="790"><counter type="INSTRUCTION" missed="2" covered="48"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="traversal" desc="(Ljava/lang/Object;Lgraph/TraversalSpec;)Lgraph/Graph$Traversal;" line="809"><counter type="INSTRUCTION" missed="2" covered="96"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="depthFirstTraversalConnected" desc="(Lgraph/DepthFirstTraversalSpec;)Lgraph/Graph$Traversal;" line="833"><counter type="INSTRUCTION" missed="2" covered="350"/><counter type="BRANCH" missed="0" covered="26"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="14"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eachBfs" desc="(Ljava/lang/String;Lgroovy/lang/Closure;)V" line="871"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eachBfs" desc="(Lgraph/NameSpec;Lgroovy/lang/Closure;)V" line="886"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findBfs" desc="(Ljava/lang/String;Lgroovy/lang/Closure;)Lgraph/Vertex;" line="897"><counter type="INSTRUCTION" missed="2" covered="40"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findBfs" desc="(Lgraph/NameSpec;Lgroovy/lang/Closure;)Lgraph/Vertex;" line="918"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="injectBfs" desc="(Ljava/lang/String;Ljava/lang/Object;Lgroovy/lang/Closure;)Ljava/lang/Object;" line="930"><counter type="INSTRUCTION" missed="2" covered="40"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="injectBfs" desc="(Lgraph/NameSpec;Ljava/lang/Object;Lgroovy/lang/Closure;)Ljava/lang/Object;" line="949"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAllBfs" desc="(Ljava/lang/String;Lgroovy/lang/Closure;)Ljava/util/List;" line="960"><counter type="INSTRUCTION" missed="2" covered="58"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAllBfs" desc="(Lgraph/NameSpec;Lgroovy/lang/Closure;)Ljava/util/List;" line="982"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectBfs" desc="(Ljava/lang/String;Lgroovy/lang/Closure;)Ljava/util/List;" line="993"><counter type="INSTRUCTION" missed="2" covered="58"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectBfs" desc="(Lgraph/NameSpec;Lgroovy/lang/Closure;)Ljava/util/List;" line="1012"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="breadthFirstTraversal" desc="(Ljava/lang/String;Lgroovy/lang/Closure;)Lgraph/Graph$Traversal;" line="1023"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="breadthFirstTraversal" desc="(Lgraph/NameSpec;Lgroovy/lang/Closure;)Lgraph/Graph$Traversal;" line="1028"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="breadthFirstTraversalConnected" desc="(Lgraph/BreadthFirstTraversalSpec;)Lgraph/Graph$Traversal;" line="1043"><counter type="INSTRUCTION" missed="2" covered="369"/><counter type="BRANCH" missed="0" covered="16"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classifyEdges" desc="(Lgroovy/lang/Closure;)Lgraph/EdgeClassification;" line="1081"><counter type="INSTRUCTION" missed="2" covered="40"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertyMissing" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="1097"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="methodMissing" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="1110"><counter type="INSTRUCTION" missed="2" covered="444"/><counter type="BRANCH" missed="0" covered="34"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="18"/><counter type="METHOD" missed="0" covered="1"/></method><method name="depthFirstTraversal" desc="(Lgroovy/lang/Closure;)Lgraph/Graph$Traversal;"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="depthFirstTraversalSpec" desc="(Lgroovy/lang/Closure;)Lgraph/DepthFirstTraversalSpec;"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="breadthFirstTraversalSpec" desc="(Lgroovy/lang/Closure;)Lgraph/BreadthFirstTraversalSpec;"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="eachBfs" desc="(Lgroovy/lang/Closure;)V"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findBfs" desc="(Lgroovy/lang/Closure;)Lgraph/Vertex;"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="injectBfs" desc="(Ljava/lang/Object;Lgroovy/lang/Closure;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAllBfs" desc="(Lgroovy/lang/Closure;)Ljava/util/List;"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectBfs" desc="(Lgroovy/lang/Closure;)Ljava/util/List;"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="breadthFirstTraversal" desc="(Lgroovy/lang/Closure;)Lgraph/Graph$Traversal;"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="146" covered="3946"/><counter type="BRANCH" missed="0" covered="134"/><counter type="LINE" missed="0" covered="228"/><counter type="COMPLEXITY" missed="0" covered="150"/><counter type="METHOD" missed="0" covered="83"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Graph$_eachBfs_closure9$_closure17"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="874"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClosure" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="28"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Graph$_collectBfs_closure13"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="1000"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClosure" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="31"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Graph$_makeColorMap_closure8"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="724"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="25"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Edge"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOne" desc="()Ljava/lang/Object;" line="15"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setOne" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="19"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTwo" desc="()Ljava/lang/Object;" line="23"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setTwo" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="27"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asBoolean" desc="()Z" line="31"><counter type="INSTRUCTION" missed="9" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Lgraph/Edge;)Z" line="35"><counter type="INSTRUCTION" missed="9" covered="62"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="47"><counter type="INSTRUCTION" missed="9" covered="36"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="63"><counter type="INSTRUCTION" missed="3" covered="26"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="11"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="11"><counter type="INSTRUCTION" missed="9" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="11"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="11"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="values" desc="()Ljava/util/Collection;" line="11"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V" line="11"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z" line="11"><counter type="INSTRUCTION" missed="9" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="11"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z" line="11"><counter type="INSTRUCTION" missed="9" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceAll" desc="(Ljava/util/function/BiFunction;)V" line="11"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="11"><counter type="INSTRUCTION" missed="3" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="entrySet" desc="()Ljava/util/Set;" line="11"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAll" desc="(Ljava/util/Map;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putIfAbsent" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="11"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keySet" desc="()Ljava/util/Set;" line="11"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsValue" desc="(Ljava/lang/Object;)Z" line="11"><counter type="INSTRUCTION" missed="9" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsKey" desc="(Ljava/lang/Object;)Z" line="11"><counter type="INSTRUCTION" missed="9" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOrDefault" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="11"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEach" desc="(Ljava/util/function/BiConsumer;)V" line="11"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeIfAbsent" desc="(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;" line="11"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeIfPresent" desc="(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;" line="11"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compute" desc="(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;" line="11"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="merge" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;" line="11"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMap" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMap" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="260" covered="320"/><counter type="BRANCH" missed="0" covered="22"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="15" covered="30"/><counter type="METHOD" missed="15" covered="19"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Graph$TraversalColor"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/util/LinkedHashMap;)V"><counter type="INSTRUCTION" missed="11" covered="28"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="values" desc="()[Lgraph/Graph$TraversalColor;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lgraph/Graph$TraversalColor;"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="83"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="37" covered="126"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Graph$_injectBfs_closure11$_closure19"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="934"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResult" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClosure" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="44"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/DslScript"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertyMissing" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="33"><counter type="INSTRUCTION" missed="2" covered="28"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertyMissing" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="38"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="methodMissing" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="43"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGraph" desc="()Lgraph/Graph;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setGraph" desc="(Lgraph/Graph;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="59"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Graph$_classifyEdges_closure14$_closure20"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Lgraph/Edge;Ljava/lang/String;Ljava/lang/String;Lgraph/Graph$TraversalColor;)Ljava/lang/Object;" line="1084"><counter type="INSTRUCTION" missed="2" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lgraph/Edge;Ljava/lang/String;Ljava/lang/String;Lgraph/Graph$TraversalColor;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEc" desc="()Lgraph/EdgeClassification;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAction" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="43"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/VertexSpec"><method name="&lt;init&gt;" desc="(Lgraph/Graph;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertex" desc="(Lgraph/Vertex;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMetaClass" desc="()Lgroovy/lang/MetaClass;"><counter type="INSTRUCTION" missed="8" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMetaClass" desc="(Lgroovy/lang/MetaClass;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeMethod" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProperty" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setProperty" desc="(Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getGraph" desc="()Lgraph/Graph;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setGraph" desc="(Lgraph/Graph;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="30" covered="50"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/NameSpec"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setName" desc="(Ljava/lang/String;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Graph$_getUnvisitedVertexName_closure4"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="643"><counter type="INSTRUCTION" missed="2" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColors" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="52"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Graph$_adjacentEdges_closure7"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Lgraph/Edge;)Ljava/lang/Object;" line="695"><counter type="INSTRUCTION" missed="2" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lgraph/Edge;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getKey" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="42"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Graph$_findBfs_closure10"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="899"><counter type="INSTRUCTION" missed="2" covered="34"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRoot" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClosure" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResult" desc="()Lgraph/Vertex;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="36" covered="71"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/DepthFirstTraversalSpec"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPreorder" desc="()Lgroovy/lang/Closure;" line="17"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPostorder" desc="()Lgroovy/lang/Closure;" line="25"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClassifyEdge" desc="()Lgroovy/lang/Closure;" line="33"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preorder" desc="(Lgroovy/lang/Closure;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="postorder" desc="(Lgroovy/lang/Closure;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classifyEdge" desc="(Lgroovy/lang/Closure;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="62"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/ConfigSpec"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMap" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMap" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClosure" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setClosure" desc="(Lgroovy/lang/Closure;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/EdgeClassification"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="69"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(Lgraph/Graph;Lgraph/Edge;Ljava/lang/String;Ljava/lang/String;Lgraph/Graph$TraversalColor;Lgroovy/lang/Closure;)V" line="49"><counter type="INSTRUCTION" missed="40" covered="156"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="19"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getForrest" desc="()Lgraph/Graph;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setForrest" desc="(Lgraph/Graph;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getBackEdges" desc="()Ljava/util/List;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setBackEdges" desc="(Ljava/util/List;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTreeEdges" desc="()Ljava/util/List;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTreeEdges" desc="(Ljava/util/List;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getForwardEdges" desc="()Ljava/util/List;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setForwardEdges" desc="(Ljava/util/List;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getCrossEdges" desc="()Ljava/util/List;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setCrossEdges" desc="(Ljava/util/List;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="60" covered="240"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="24"/><counter type="COMPLEXITY" missed="6" covered="10"/><counter type="METHOD" missed="5" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Graph$_eachBfs_closure9"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="872"><counter type="INSTRUCTION" missed="2" covered="32"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRoot" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClosure" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="61"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Graph$_injectBfs_closure11"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="932"><counter type="INSTRUCTION" missed="2" covered="34"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRoot" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResult" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClosure" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="2" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="33" covered="71"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Graph$_getUnvisitedChildName_closure5"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="656"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Graph$_getUnvisitedChildName_closure6"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="658"><counter type="INSTRUCTION" missed="2" covered="62"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKey" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColors" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="85"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Graph$_findAllBfs_closure12"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="967"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClosure" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/BreadthFirstTraversalSpec"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVisit" desc="()Lgroovy/lang/Closure;" line="15"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="visit" desc="(Lgroovy/lang/Closure;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/EdgeClassification$EdgeType"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/util/LinkedHashMap;)V"><counter type="INSTRUCTION" missed="11" covered="28"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="values" desc="()[Lgraph/EdgeClassification$EdgeType;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lgraph/EdgeClassification$EdgeType;"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="104"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="37" covered="147"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Vertex"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKey" desc="()Ljava/lang/Object;" line="13"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setKey" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="17"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asBoolean" desc="()Z" line="21"><counter type="INSTRUCTION" missed="9" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Lgraph/Vertex;)Z" line="25"><counter type="INSTRUCTION" missed="9" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="30"><counter type="INSTRUCTION" missed="39" covered="10"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="9"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="9"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="9"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="9"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="values" desc="()Ljava/util/Collection;" line="9"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="clear" desc="()V" line="9"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z" line="9"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replace" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="9"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replace" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z" line="9"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="replaceAll" desc="(Ljava/util/function/BiFunction;)V" line="9"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="9"><counter type="INSTRUCTION" missed="3" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="entrySet" desc="()Ljava/util/Set;" line="9"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAll" desc="(Ljava/util/Map;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putIfAbsent" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="9"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keySet" desc="()Ljava/util/Set;" line="9"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsValue" desc="(Ljava/lang/Object;)Z" line="9"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsKey" desc="(Ljava/lang/Object;)Z" line="9"><counter type="INSTRUCTION" missed="9" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOrDefault" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="9"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEach" desc="(Ljava/util/function/BiConsumer;)V" line="9"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeIfAbsent" desc="(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;" line="9"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeIfPresent" desc="(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;" line="9"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compute" desc="(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;" line="9"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="merge" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;" line="9"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMap" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMap" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="341" covered="132"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="23" covered="11"/><counter type="METHOD" missed="20" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Graph$Traversal"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/util/LinkedHashMap;)V"><counter type="INSTRUCTION" missed="11" covered="28"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="values" desc="()[Lgraph/Graph$Traversal;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lgraph/Graph$Traversal;"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="37" covered="84"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DslScript.groovy"><line nr="29" mi="0" ci="16" mb="0" cb="0"/><line nr="33" mi="2" ci="26" mb="0" cb="0"/><line nr="38" mi="32" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="59"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BreadthFirstTraversalSpec.groovy"><line nr="15" mi="2" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConfigSpec.groovy"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Graph.groovy"><line nr="27" mi="0" ci="13" mb="0" cb="0"/><line nr="29" mi="0" ci="22" mb="0" cb="0"/><line nr="32" mi="0" ci="15" mb="0" cb="0"/><line nr="33" mi="0" ci="12" mb="0" cb="0"/><line nr="71" mi="0" ci="11" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="0"/><line nr="73" mi="2" ci="2" mb="0" cb="0"/><line nr="81" mi="2" ci="11" mb="0" cb="0"/><line nr="92" mi="0" ci="8" mb="0" cb="2"/><line nr="93" mi="0" ci="26" mb="0" cb="0"/><line nr="97" mi="0" ci="9" mb="0" cb="0"/><line nr="105" mi="2" ci="11" mb="0" cb="0"/><line nr="115" mi="9" ci="9" mb="0" cb="0"/><line nr="123" mi="0" ci="13" mb="0" cb="0"/><line nr="124" mi="0" ci="7" mb="0" cb="0"/><line nr="125" mi="0" ci="9" mb="0" cb="0"/><line nr="133" mi="0" ci="11" mb="0" cb="4"/><line nr="134" mi="0" ci="8" mb="0" cb="0"/><line nr="136" mi="0" ci="8" mb="0" cb="0"/><line nr="137" mi="0" ci="9" mb="0" cb="0"/><line nr="141" mi="0" ci="13" mb="0" cb="0"/><line nr="142" mi="0" ci="7" mb="0" cb="0"/><line nr="143" mi="0" ci="9" mb="0" cb="0"/><line nr="147" mi="0" ci="11" mb="0" cb="4"/><line nr="148" mi="0" ci="8" mb="0" cb="0"/><line nr="150" mi="0" ci="8" mb="0" cb="0"/><line nr="151" mi="0" ci="9" mb="0" cb="0"/><line nr="164" mi="0" ci="33" mb="0" cb="0"/><line nr="168" mi="0" ci="12" mb="0" cb="4"/><line nr="169" mi="0" ci="30" mb="0" cb="0"/><line nr="171" mi="0" ci="15" mb="0" cb="0"/><line nr="172" mi="0" ci="11" mb="0" cb="0"/><line nr="173" mi="0" ci="8" mb="0" cb="0"/><line nr="177" mi="0" ci="11" mb="0" cb="0"/><line nr="178" mi="0" ci="34" mb="0" cb="0"/><line nr="179" mi="0" ci="29" mb="0" cb="0"/><line nr="183" mi="0" ci="12" mb="0" cb="4"/><line nr="184" mi="0" ci="30" mb="0" cb="0"/><line nr="186" mi="0" ci="11" mb="0" cb="0"/><line nr="187" mi="0" ci="10" mb="0" cb="0"/><line nr="188" mi="0" ci="9" mb="0" cb="0"/><line nr="192" mi="0" ci="11" mb="0" cb="0"/><line nr="193" mi="0" ci="34" mb="0" cb="0"/><line nr="194" mi="0" ci="29" mb="0" cb="0"/><line nr="198" mi="2" ci="3" mb="0" cb="0"/><line nr="208" mi="9" ci="18" mb="0" cb="0"/><line nr="218" mi="0" ci="32" mb="0" cb="0"/><line nr="219" mi="2" ci="10" mb="0" cb="0"/><line nr="228" mi="2" ci="14" mb="0" cb="0"/><line nr="238" mi="0" ci="15" mb="0" cb="0"/><line nr="239" mi="0" ci="14" mb="0" cb="0"/><line nr="240" mi="0" ci="21" mb="0" cb="0"/><line nr="241" mi="2" ci="7" mb="0" cb="0"/><line nr="243" mi="2" ci="9" mb="0" cb="0"/><line nr="245" mi="2" ci="4" mb="0" cb="0"/><line nr="255" mi="2" ci="24" mb="0" cb="0"/><line nr="264" mi="0" ci="22" mb="0" cb="10"/><line nr="265" mi="0" ci="8" mb="0" cb="0"/><line nr="267" mi="0" ci="14" mb="0" cb="0"/><line nr="268" mi="0" ci="12" mb="0" cb="0"/><line nr="269" mi="0" ci="12" mb="0" cb="0"/><line nr="270" mi="0" ci="17" mb="0" cb="0"/><line nr="271" mi="0" ci="21" mb="0" cb="0"/><line nr="272" mi="0" ci="10" mb="0" cb="2"/><line nr="273" mi="0" ci="12" mb="0" cb="0"/><line nr="275" mi="0" ci="10" mb="0" cb="2"/><line nr="276" mi="5" ci="14" mb="0" cb="0"/><line nr="287" mi="0" ci="17" mb="0" cb="0"/><line nr="314" mi="0" ci="22" mb="0" cb="0"/><line nr="315" mi="2" ci="10" mb="0" cb="0"/><line nr="353" mi="0" ci="40" mb="0" cb="0"/><line nr="354" mi="2" ci="10" mb="0" cb="0"/><line nr="365" mi="2" ci="15" mb="0" cb="0"/><line nr="376" mi="0" ci="21" mb="0" cb="2"/><line nr="377" mi="0" ci="22" mb="0" cb="0"/><line nr="378" mi="2" ci="10" mb="0" cb="0"/><line nr="389" mi="2" ci="15" mb="0" cb="0"/><line nr="401" mi="0" ci="30" mb="0" cb="0"/><line nr="402" mi="2" ci="10" mb="0" cb="0"/><line nr="415" mi="0" ci="21" mb="0" cb="2"/><line nr="416" mi="0" ci="30" mb="0" cb="0"/><line nr="417" mi="2" ci="10" mb="0" cb="0"/><line nr="430" mi="2" ci="16" mb="0" cb="0"/><line nr="440" mi="2" ci="24" mb="0" cb="0"/><line nr="452" mi="0" ci="40" mb="0" cb="0"/><line nr="453" mi="2" ci="10" mb="0" cb="0"/><line nr="464" mi="2" ci="19" mb="0" cb="0"/><line nr="494" mi="0" ci="22" mb="0" cb="0"/><line nr="495" mi="2" ci="10" mb="0" cb="0"/><line nr="508" mi="0" ci="21" mb="0" cb="2"/><line nr="509" mi="0" ci="21" mb="0" cb="2"/><line nr="510" mi="0" ci="22" mb="0" cb="0"/><line nr="511" mi="2" ci="10" mb="0" cb="0"/><line nr="524" mi="2" ci="20" mb="0" cb="0"/><line nr="562" mi="0" ci="48" mb="0" cb="0"/><line nr="563" mi="2" ci="10" mb="0" cb="0"/><line nr="575" mi="2" ci="20" mb="0" cb="0"/><line nr="588" mi="0" ci="30" mb="0" cb="0"/><line nr="589" mi="2" ci="10" mb="0" cb="0"/><line nr="604" mi="0" ci="21" mb="0" cb="2"/><line nr="605" mi="0" ci="21" mb="0" cb="2"/><line nr="606" mi="0" ci="30" mb="0" cb="0"/><line nr="607" mi="2" ci="10" mb="0" cb="0"/><line nr="622" mi="2" ci="21" mb="0" cb="0"/><line nr="632" mi="2" ci="24" mb="0" cb="0"/><line nr="642" mi="2" ci="19" mb="0" cb="0"/><line nr="643" mi="2" ci="35" mb="0" cb="4"/><line nr="655" mi="0" ci="34" mb="0" cb="0"/><line nr="656" mi="2" ci="13" mb="0" cb="0"/><line nr="658" mi="0" ci="24" mb="0" cb="2"/><line nr="659" mi="0" ci="15" mb="0" cb="0"/><line nr="660" mi="2" ci="21" mb="0" cb="4"/><line nr="663" mi="0" ci="7" mb="0" cb="4"/><line nr="664" mi="0" ci="2" mb="0" cb="0"/><line nr="666" mi="2" ci="22" mb="0" cb="2"/><line nr="676" mi="2" ci="14" mb="0" cb="0"/><line nr="685" mi="2" ci="20" mb="0" cb="0"/><line nr="694" mi="2" ci="16" mb="0" cb="0"/><line nr="695" mi="2" ci="25" mb="0" cb="4"/><line nr="705" mi="2" ci="14" mb="0" cb="0"/><line nr="714" mi="2" ci="14" mb="0" cb="0"/><line nr="723" mi="2" ci="15" mb="0" cb="0"/><line nr="724" mi="2" ci="16" mb="0" cb="0"/><line nr="736" mi="0" ci="13" mb="0" cb="0"/><line nr="737" mi="2" ci="14" mb="0" cb="0"/><line nr="748" mi="2" ci="16" mb="0" cb="0"/><line nr="761" mi="0" ci="11" mb="0" cb="0"/><line nr="762" mi="0" ci="10" mb="0" cb="0"/><line nr="763" mi="0" ci="10" mb="0" cb="0"/><line nr="764" mi="0" ci="6" mb="0" cb="0"/><line nr="765" mi="0" ci="7" mb="0" cb="0"/><line nr="766" mi="2" ci="2" mb="0" cb="0"/><line nr="776" mi="0" ci="25" mb="0" cb="2"/><line nr="777" mi="0" ci="31" mb="0" cb="2"/><line nr="790" mi="0" ci="11" mb="0" cb="0"/><line nr="791" mi="0" ci="10" mb="0" cb="0"/><line nr="792" mi="0" ci="10" mb="0" cb="0"/><line nr="793" mi="0" ci="6" mb="0" cb="0"/><line nr="794" mi="0" ci="7" mb="0" cb="0"/><line nr="795" mi="2" ci="2" mb="0" cb="0"/><line nr="809" mi="0" ci="15" mb="0" cb="0"/><line nr="810" mi="0" ci="7" mb="0" cb="2"/><line nr="811" mi="0" ci="13" mb="0" cb="0"/><line nr="812" mi="0" ci="8" mb="0" cb="2"/><line nr="813" mi="0" ci="10" mb="0" cb="0"/><line nr="815" mi="0" ci="15" mb="0" cb="0"/><line nr="816" mi="0" ci="20" mb="0" cb="0"/><line nr="818" mi="2" ci="6" mb="0" cb="0"/><line nr="833" mi="0" ci="8" mb="0" cb="0"/><line nr="834" mi="0" ci="30" mb="0" cb="6"/><line nr="835" mi="0" ci="20" mb="0" cb="0"/><line nr="836" mi="0" ci="10" mb="0" cb="0"/><line nr="838" mi="0" ci="20" mb="0" cb="0"/><line nr="840" mi="0" ci="12" mb="0" cb="0"/><line nr="841" mi="0" ci="13" mb="0" cb="2"/><line nr="842" mi="0" ci="13" mb="0" cb="0"/><line nr="843" mi="0" ci="24" mb="0" cb="2"/><line nr="844" mi="0" ci="14" mb="0" cb="2"/><line nr="845" mi="0" ci="22" mb="0" cb="4"/><line nr="846" mi="0" ci="10" mb="0" cb="0"/><line nr="848" mi="0" ci="17" mb="0" cb="2"/><line nr="849" mi="0" ci="10" mb="0" cb="0"/><line nr="850" mi="0" ci="13" mb="0" cb="2"/><line nr="851" mi="0" ci="26" mb="0" cb="0"/><line nr="856" mi="0" ci="30" mb="0" cb="6"/><line nr="857" mi="0" ci="20" mb="0" cb="0"/><line nr="858" mi="0" ci="10" mb="0" cb="0"/><line nr="860" mi="0" ci="20" mb="0" cb="0"/><line nr="861" mi="2" ci="6" mb="0" cb="0"/><line nr="871" mi="0" ci="14" mb="0" cb="0"/><line nr="872" mi="0" ci="16" mb="0" cb="0"/><line nr="873" mi="2" ci="14" mb="0" cb="0"/><line nr="874" mi="0" ci="9" mb="0" cb="0"/><line nr="875" mi="2" ci="2" mb="0" cb="0"/><line nr="886" mi="0" ci="13" mb="0" cb="0"/><line nr="897" mi="0" ci="8" mb="0" cb="0"/><line nr="898" mi="0" ci="14" mb="0" cb="0"/><line nr="899" mi="0" ci="16" mb="0" cb="0"/><line nr="900" mi="2" ci="16" mb="0" cb="0"/><line nr="901" mi="0" ci="10" mb="0" cb="2"/><line nr="902" mi="0" ci="12" mb="0" cb="0"/><line nr="903" mi="5" ci="8" mb="0" cb="0"/><line nr="907" mi="2" ci="4" mb="0" cb="0"/><line nr="918" mi="2" ci="15" mb="0" cb="0"/><line nr="930" mi="0" ci="8" mb="0" cb="0"/><line nr="931" mi="0" ci="14" mb="0" cb="0"/><line nr="932" mi="0" ci="16" mb="0" cb="0"/><line nr="933" mi="2" ci="16" mb="0" cb="0"/><line nr="934" mi="2" ci="19" mb="0" cb="0"/><line nr="937" mi="2" ci="4" mb="0" cb="0"/><line nr="949" mi="2" ci="13" mb="0" cb="0"/><line nr="960" mi="0" ci="4" mb="0" cb="0"/><line nr="961" mi="0" ci="3" mb="0" cb="2"/><line nr="962" mi="0" ci="17" mb="0" cb="0"/><line nr="964" mi="0" ci="8" mb="0" cb="0"/><line nr="966" mi="2" ci="18" mb="0" cb="0"/><line nr="967" mi="0" ci="10" mb="0" cb="2"/><line nr="968" mi="0" ci="7" mb="0" cb="0"/><line nr="970" mi="2" ci="2" mb="0" cb="0"/><line nr="982" mi="2" ci="15" mb="0" cb="0"/><line nr="993" mi="0" ci="4" mb="0" cb="0"/><line nr="994" mi="0" ci="3" mb="0" cb="2"/><line nr="995" mi="0" ci="17" mb="0" cb="0"/><line nr="997" mi="0" ci="8" mb="0" cb="0"/><line nr="999" mi="2" ci="18" mb="0" cb="0"/><line nr="1000" mi="2" ci="14" mb="0" cb="0"/><line nr="1012" mi="2" ci="15" mb="0" cb="0"/><line nr="1023" mi="0" ci="13" mb="0" cb="0"/><line nr="1024" mi="2" ci="14" mb="0" cb="0"/><line nr="1028" mi="2" ci="16" mb="0" cb="0"/><line nr="1043" mi="0" ci="17" mb="0" cb="4"/><line nr="1044" mi="0" ci="30" mb="0" cb="0"/><line nr="1046" mi="0" ci="19" mb="0" cb="0"/><line nr="1047" mi="0" ci="8" mb="0" cb="2"/><line nr="1048" mi="0" ci="24" mb="0" cb="0"/><line nr="1049" mi="0" ci="6" mb="0" cb="0"/><line nr="1051" mi="0" ci="24" mb="0" cb="0"/><line nr="1052" mi="0" ci="9" mb="0" cb="0"/><line nr="1053" mi="0" ci="11" mb="0" cb="0"/><line nr="1054" mi="0" ci="9" mb="0" cb="2"/><line nr="1055" mi="0" ci="10" mb="0" cb="0"/><line nr="1056" mi="0" ci="12" mb="0" cb="0"/><line nr="1057" mi="0" ci="13" mb="0" cb="2"/><line nr="1058" mi="0" ci="13" mb="0" cb="0"/><line nr="1059" mi="0" ci="24" mb="0" cb="2"/><line nr="1060" mi="0" ci="17" mb="0" cb="2"/><line nr="1061" mi="0" ci="17" mb="0" cb="0"/><line nr="1062" mi="0" ci="8" mb="0" cb="2"/><line nr="1063" mi="0" ci="20" mb="0" cb="0"/><line nr="1064" mi="0" ci="6" mb="0" cb="0"/><line nr="1066" mi="0" ci="20" mb="0" cb="0"/><line nr="1067" mi="0" ci="23" mb="0" cb="0"/><line nr="1070" mi="0" ci="21" mb="0" cb="0"/><line nr="1072" mi="2" ci="6" mb="0" cb="0"/><line nr="1081" mi="0" ci="15" mb="0" cb="0"/><line nr="1082" mi="0" ci="13" mb="0" cb="0"/><line nr="1083" mi="2" ci="16" mb="0" cb="0"/><line nr="1084" mi="2" ci="18" mb="0" cb="0"/><line nr="1087" mi="2" ci="4" mb="0" cb="0"/><line nr="1097" mi="2" ci="17" mb="0" cb="0"/><line nr="1110" mi="0" ci="21" mb="0" cb="0"/><line nr="1111" mi="0" ci="4" mb="0" cb="2"/><line nr="1112" mi="0" ci="10" mb="0" cb="0"/><line nr="1115" mi="0" ci="25" mb="0" cb="0"/><line nr="1116" mi="0" ci="21" mb="0" cb="0"/><line nr="1117" mi="0" ci="3" mb="0" cb="2"/><line nr="1118" mi="0" ci="12" mb="0" cb="0"/><line nr="1120" mi="2" ci="2" mb="0" cb="0"/><line nr="1122" mi="2" ci="2" mb="0" cb="0"/><line nr="1125" mi="0" ci="4" mb="0" cb="2"/><line nr="1126" mi="0" ci="21" mb="0" cb="0"/><line nr="1129" mi="0" ci="6" mb="0" cb="2"/><line nr="1130" mi="0" ci="8" mb="0" cb="0"/><line nr="1132" mi="0" ci="10" mb="0" cb="2"/><line nr="1133" mi="0" ci="29" mb="0" cb="0"/><line nr="1136" mi="0" ci="24" mb="0" cb="6"/><line nr="1137" mi="0" ci="37" mb="0" cb="2"/><line nr="1138" mi="0" ci="27" mb="0" cb="0"/><line nr="1141" mi="0" ci="24" mb="0" cb="6"/><line nr="1142" mi="0" ci="47" mb="0" cb="0"/><line nr="1145" mi="0" ci="38" mb="0" cb="10"/><line nr="1146" mi="0" ci="37" mb="0" cb="2"/><line nr="1147" mi="0" ci="45" mb="0" cb="0"/><line nr="1150" mi="2" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="670" covered="5056"/><counter type="BRANCH" missed="2" covered="160"/><counter type="LINE" missed="0" covered="264"/><counter type="COMPLEXITY" missed="45" covered="212"/><counter type="METHOD" missed="43" covered="133"/><counter type="CLASS" missed="0" covered="23"/></sourcefile><sourcefile name="EdgeSpec.groovy"><line nr="10" mi="0" ci="12" mb="0" cb="0"/><line nr="14" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="61"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="3" covered="7"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Vertex.groovy"><line nr="9" mi="230" ci="53" mb="0" cb="0"/><line nr="13" mi="9" ci="0" mb="0" cb="0"/><line nr="17" mi="2" ci="8" mb="0" cb="0"/><line nr="21" mi="9" ci="7" mb="0" cb="0"/><line nr="25" mi="9" ci="12" mb="0" cb="0"/><line nr="30" mi="1" ci="6" mb="2" cb="2"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="8" ci="0" mb="2" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="7" ci="0" mb="0" cb="0"/><line nr="37" mi="21" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="341" covered="132"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="23" covered="11"/><counter type="METHOD" missed="20" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EdgeClassification.groovy"><line nr="10" mi="0" ci="15" mb="0" cb="0"/><line nr="11" mi="0" ci="10" mb="0" cb="0"/><line nr="12" mi="0" ci="10" mb="0" cb="0"/><line nr="13" mi="0" ci="10" mb="0" cb="0"/><line nr="14" mi="0" ci="20" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="2"/><line nr="52" mi="0" ci="9" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="0"/><line nr="54" mi="0" ci="14" mb="0" cb="0"/><line nr="55" mi="3" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="2"/><line nr="58" mi="0" ci="8" mb="0" cb="0"/><line nr="59" mi="0" ci="14" mb="0" cb="0"/><line nr="60" mi="3" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="8" mb="1" cb="1"/><line nr="63" mi="0" ci="13" mb="0" cb="2"/><line nr="64" mi="0" ci="8" mb="0" cb="0"/><line nr="65" mi="0" ci="15" mb="0" cb="0"/><line nr="67" mi="0" ci="8" mb="0" cb="0"/><line nr="68" mi="0" ci="14" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="34" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="97" covered="387"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="1" covered="24"/><counter type="COMPLEXITY" missed="9" covered="13"/><counter type="METHOD" missed="7" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Edge.groovy"><line nr="11" mi="175" ci="108" mb="0" cb="0"/><line nr="15" mi="9" ci="0" mb="0" cb="0"/><line nr="19" mi="2" ci="8" mb="0" cb="0"/><line nr="23" mi="9" ci="0" mb="0" cb="0"/><line nr="27" mi="2" ci="8" mb="0" cb="0"/><line nr="31" mi="9" ci="18" mb="0" cb="4"/><line nr="35" mi="9" ci="60" mb="0" cb="12"/><line nr="47" mi="0" ci="7" mb="0" cb="4"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="2"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="9" ci="8" mb="0" cb="0"/><line nr="63" mi="3" ci="24" mb="0" cb="0"/><counter type="INSTRUCTION" missed="260" covered="320"/><counter type="BRANCH" missed="0" covered="22"/><counter type="LINE" missed="2" covered="12"/><counter type="COMPLEXITY" missed="15" covered="30"/><counter type="METHOD" missed="15" covered="19"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TraversalSpec.groovy"><line nr="16" mi="0" ci="23" mb="0" cb="0"/><line nr="28" mi="0" ci="15" mb="0" cb="0"/><line nr="33" mi="2" ci="17" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="84"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DepthFirstTraversalSpec.groovy"><line nr="17" mi="2" ci="3" mb="0" cb="0"/><line nr="25" mi="2" ci="3" mb="0" cb="0"/><line nr="33" mi="2" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="12" mb="0" cb="0"/><line nr="51" mi="0" ci="12" mb="0" cb="0"/><line nr="59" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="62"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NameSpec.groovy"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VertexSpec.groovy"><line nr="11" mi="0" ci="12" mb="0" cb="0"/><line nr="15" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="30" covered="50"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1472" covered="6294"/><counter type="BRANCH" missed="10" covered="194"/><counter type="LINE" missed="9" covered="324"/><counter type="COMPLEXITY" missed="103" covered="308"/><counter type="METHOD" missed="94" covered="215"/><counter type="CLASS" missed="0" covered="35"/></package><counter type="INSTRUCTION" missed="2568" covered="10734"/><counter type="BRANCH" missed="26" covered="356"/><counter type="LINE" missed="41" covered="585"/><counter type="COMPLEXITY" missed="192" covered="547"/><counter type="METHOD" missed="169" covered="379"/><counter type="CLASS" missed="2" covered="78"/></report>