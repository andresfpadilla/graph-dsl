<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.0//EN" "report.dtd"><report name="graph-dsl"><sessioninfo id="travis-job-moaxcp-graph-dsl-391558676.travisci.net-8ae1f441" start="1528857573337" dump="1528857581897"/><sessioninfo id="travis-job-moaxcp-graph-dsl-391558676.travisci.net-c96ef7f5" start="1528857597049" dump="1528857607172"/><package name="graph/type/undirected"><class name="graph/type/undirected/GraphType$_convert_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Lgraph/Edge;)Ljava/lang/Object;" line="56"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lgraph/Edge;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/undirected/GraphType$_convert_closure3"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/String;Lgraph/Vertex;)Ljava/lang/Object;" line="62"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/String;Lgraph/Vertex;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="30"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/undirected/GraphType"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newEdge" desc="(Ljava/util/Map;)Lgraph/Edge;" line="20"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newVertex" desc="(Ljava/util/Map;)Lgraph/Vertex;" line="25"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newEdgeSpec" desc="(Ljava/util/Map;Lgroovy/lang/Closure;)Lgraph/EdgeSpec;" line="30"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newVertexSpec" desc="(Ljava/util/Map;Lgroovy/lang/Closure;)Lgraph/VertexSpec;" line="35"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canConvert" desc="()Z" line="40"><counter type="INSTRUCTION" missed="9" covered="53"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convert" desc="()V" line="52"><counter type="INSTRUCTION" missed="0" covered="94"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isMultiGraph" desc="()Z" line="70"><counter type="INSTRUCTION" missed="9" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDirected" desc="()Z" line="75"><counter type="INSTRUCTION" missed="9" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWeighted" desc="()Z" line="80"><counter type="INSTRUCTION" missed="9" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="traverseEdges" desc="(Ljava/lang/Object;)Ljava/util/Set;" line="89"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newEdgeSpec" desc="(Ljava/util/Map;)Lgraph/EdgeSpec;"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newVertexSpec" desc="(Ljava/util/Map;)Lgraph/VertexSpec;"><counter type="INSTRUCTION" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGraph" desc="()Lgraph/Graph;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setGraph" desc="(Lgraph/Graph;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="50" covered="261"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="18"/><counter type="COMPLEXITY" missed="0" covered="19"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/undirected/GraphType$_canConvert_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Lgraph/Edge;)Ljava/lang/Object;" line="45"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lgraph/Edge;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEdges" desc="()Ljava/util/Set;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="44"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="GraphType.groovy"><line nr="20" mi="2" ci="10" mb="0" cb="0"/><line nr="25" mi="2" ci="10" mb="0" cb="0"/><line nr="30" mi="2" ci="13" mb="0" cb="0"/><line nr="35" mi="2" ci="13" mb="0" cb="0"/><line nr="40" mi="0" ci="14" mb="0" cb="2"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="13" mb="0" cb="0"/><line nr="44" mi="9" ci="22" mb="0" cb="2"/><line nr="45" mi="0" ci="12" mb="0" cb="0"/><line nr="46" mi="2" ci="15" mb="0" cb="2"/><line nr="52" mi="0" ci="11" mb="0" cb="4"/><line nr="53" mi="0" ci="34" mb="0" cb="0"/><line nr="55" mi="0" ci="12" mb="0" cb="0"/><line nr="56" mi="2" ci="7" mb="0" cb="0"/><line nr="59" mi="0" ci="12" mb="0" cb="0"/><line nr="61" mi="0" ci="12" mb="0" cb="0"/><line nr="62" mi="2" ci="21" mb="0" cb="0"/><line nr="65" mi="0" ci="11" mb="0" cb="0"/><line nr="70" mi="9" ci="2" mb="0" cb="0"/><line nr="75" mi="9" ci="2" mb="0" cb="0"/><line nr="80" mi="9" ci="2" mb="0" cb="0"/><line nr="89" mi="2" ci="11" mb="0" cb="0"/><counter type="INSTRUCTION" missed="101" covered="351"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="4" covered="26"/><counter type="METHOD" missed="4" covered="21"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><counter type="INSTRUCTION" missed="101" covered="351"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="4" covered="26"/><counter type="METHOD" missed="4" covered="21"/><counter type="CLASS" missed="0" covered="4"/></package><package name="graph/plugin"><class name="graph/plugin/GraphViz$_image_closure8"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="116"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="graph/plugin/GraphViz$_dot_closure6$_closure10"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;Lgraph/Vertex;)Ljava/lang/Object;" line="83"><counter type="INSTRUCTION" missed="5" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/Object;Lgraph/Vertex;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getP" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="42"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/plugin/GraphViz$_image_closure7"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="103"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="graph/plugin/GraphViz$_dot_closure6"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="76"><counter type="INSTRUCTION" missed="2" covered="121"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="128"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/plugin/GraphViz$_getEdgeDot_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="48"><counter type="INSTRUCTION" missed="2" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/plugin/GraphViz$_getEdgeDot_closure3"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="50"><counter type="INSTRUCTION" missed="2" covered="38"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="45"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/plugin/GraphViz$_getVertexDot_closure5"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="64"><counter type="INSTRUCTION" missed="2" covered="38"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="45"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/plugin/GraphViz$_getVertexDot_closure4"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="62"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/plugin/GraphViz"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lgraph/Graph;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgeString" desc="()Ljava/lang/String;" line="24"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGraphString" desc="()Ljava/lang/String;" line="29"><counter type="INSTRUCTION" missed="4" covered="50"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="(Ljava/lang/String;)Ljava/lang/String;"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdgeDot" desc="(Lgraph/Edge;)Ljava/lang/String;" line="46"><counter type="INSTRUCTION" missed="2" covered="136"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVertexDot" desc="(Lgraph/Vertex;)Ljava/lang/String;" line="60"><counter type="INSTRUCTION" missed="2" covered="85"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dot" desc="()Ljava/lang/String;" line="73"><counter type="INSTRUCTION" missed="2" covered="37"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dot" desc="(Ljava/lang/String;)V" line="97"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="image" desc="()Ljava/util/Map;" line="101"><counter type="INSTRUCTION" missed="122" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="image" desc="(Ljava/lang/String;)V" line="115"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="view" desc="()V" line="121"><counter type="INSTRUCTION" missed="94" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="memoizedMethodPriv$getIdString" desc="(Ljava/lang/String;)Ljava/lang/String;" line="35"><counter type="INSTRUCTION" missed="8" covered="36"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGraph" desc="()Lgraph/Graph;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setGraph" desc="(Lgraph/Graph;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="257" covered="443"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="16" covered="22"/><counter type="COMPLEXITY" missed="5" covered="18"/><counter type="METHOD" missed="3" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/plugin/GraphViz$_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="16"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/plugin/GraphViz$_dot_closure6$_closure9"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="80"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getP" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="31"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="GraphViz.groovy"><line nr="19" mi="0" ci="12" mb="0" cb="0"/><line nr="24" mi="2" ci="12" mb="0" cb="2"/><line nr="29" mi="4" ci="48" mb="1" cb="3"/><line nr="35" mi="0" ci="4" mb="0" cb="2"/><line nr="36" mi="3" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="2"/><line nr="38" mi="3" ci="2" mb="0" cb="0"/><line nr="40" mi="2" ci="22" mb="0" cb="0"/><line nr="46" mi="0" ci="70" mb="0" cb="0"/><line nr="47" mi="0" ci="29" mb="0" cb="0"/><line nr="48" mi="2" ci="21" mb="0" cb="4"/><line nr="50" mi="2" ci="36" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="2"/><line nr="53" mi="0" ci="30" mb="0" cb="0"/><line nr="55" mi="2" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="19" mb="0" cb="0"/><line nr="61" mi="0" ci="29" mb="0" cb="0"/><line nr="62" mi="2" ci="9" mb="0" cb="0"/><line nr="64" mi="2" ci="36" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="2"/><line nr="67" mi="0" ci="30" mb="0" cb="0"/><line nr="69" mi="2" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="11" mb="0" cb="0"/><line nr="75" mi="0" ci="16" mb="0" cb="0"/><line nr="76" mi="0" ci="12" mb="0" cb="0"/><line nr="77" mi="0" ci="30" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="79" mi="0" ci="21" mb="0" cb="0"/><line nr="80" mi="2" ci="14" mb="0" cb="0"/><line nr="82" mi="0" ci="21" mb="0" cb="0"/><line nr="83" mi="0" ci="9" mb="0" cb="2"/><line nr="84" mi="5" ci="16" mb="0" cb="0"/><line nr="88" mi="0" ci="7" mb="0" cb="0"/><line nr="89" mi="0" ci="8" mb="0" cb="0"/><line nr="90" mi="2" ci="7" mb="0" cb="0"/><line nr="93" mi="2" ci="8" mb="0" cb="0"/><line nr="97" mi="0" ci="17" mb="0" cb="0"/><line nr="101" mi="39" ci="0" mb="2" cb="0"/><line nr="102" mi="15" ci="0" mb="0" cb="0"/><line nr="103" mi="13" ci="0" mb="0" cb="0"/><line nr="105" mi="11" ci="0" mb="0" cb="0"/><line nr="106" mi="7" ci="0" mb="0" cb="0"/><line nr="108" mi="16" ci="0" mb="0" cb="0"/><line nr="109" mi="6" ci="0" mb="0" cb="0"/><line nr="111" mi="26" ci="0" mb="0" cb="0"/><line nr="115" mi="17" ci="0" mb="0" cb="0"/><line nr="116" mi="19" ci="0" mb="0" cb="0"/><line nr="121" mi="13" ci="0" mb="0" cb="0"/><line nr="122" mi="11" ci="0" mb="0" cb="0"/><line nr="123" mi="29" ci="0" mb="0" cb="0"/><line nr="124" mi="11" ci="0" mb="0" cb="0"/><line nr="125" mi="7" ci="0" mb="0" cb="0"/><line nr="126" mi="6" ci="0" mb="0" cb="0"/><line nr="127" mi="7" ci="0" mb="0" cb="0"/><line nr="128" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="405" covered="798"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="18" covered="37"/><counter type="COMPLEXITY" missed="18" covered="37"/><counter type="METHOD" missed="16" covered="28"/><counter type="CLASS" missed="2" covered="9"/></sourcefile><counter type="INSTRUCTION" missed="405" covered="798"/><counter type="BRANCH" missed="3" covered="19"/><counter type="LINE" missed="18" covered="37"/><counter type="COMPLEXITY" missed="18" covered="37"/><counter type="METHOD" missed="16" covered="28"/><counter type="CLASS" missed="2" covered="9"/></package><package name="graph/type/directed"><class name="graph/type/directed/DirectedGraphType$_inEdges_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="60"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="28"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/directed/DirectedGraphType$_canConvert_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Lgraph/Edge;)Ljava/lang/Object;" line="42"><counter type="INSTRUCTION" missed="4" covered="27"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lgraph/Edge;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEdges" desc="()Ljava/util/Set;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="42"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/directed/DirectedGraphType$_outEdges_closure3"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="82"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="28"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/directed/DirectedGraphType"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newEdge" desc="(Ljava/util/Map;)Lgraph/Edge;" line="32"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canConvert" desc="()Z" line="37"><counter type="INSTRUCTION" missed="10" covered="58"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isDirected" desc="()Z" line="49"><counter type="INSTRUCTION" missed="9" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inEdges" desc="(Ljava/lang/Object;)Ljava/util/Set;" line="59"><counter type="INSTRUCTION" missed="2" covered="31"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inDegree" desc="(Ljava/lang/Object;)I" line="71"><counter type="INSTRUCTION" missed="3" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outEdges" desc="(Ljava/lang/Object;)Ljava/util/Set;" line="81"><counter type="INSTRUCTION" missed="2" covered="31"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outDegree" desc="(Ljava/lang/Object;)I" line="93"><counter type="INSTRUCTION" missed="3" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="traverseEdges" desc="(Ljava/lang/Object;)Ljava/util/Set;" line="103"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="33" covered="193"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="1" covered="10"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/directed/DirectedEdge"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Lgraph/type/directed/DirectedEdge;)Z" line="14"><counter type="INSTRUCTION" missed="9" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="24"><counter type="INSTRUCTION" missed="11" covered="34"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="20" covered="69"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DirectedGraphType.groovy"><line nr="32" mi="2" ci="10" mb="0" cb="0"/><line nr="37" mi="0" ci="17" mb="0" cb="2"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="13" mb="0" cb="0"/><line nr="41" mi="10" ci="24" mb="1" cb="1"/><line nr="42" mi="0" ci="12" mb="0" cb="0"/><line nr="43" mi="4" ci="13" mb="1" cb="1"/><line nr="49" mi="9" ci="2" mb="0" cb="0"/><line nr="59" mi="2" ci="23" mb="0" cb="0"/><line nr="60" mi="2" ci="11" mb="0" cb="0"/><line nr="71" mi="3" ci="16" mb="0" cb="0"/><line nr="81" mi="2" ci="23" mb="0" cb="0"/><line nr="82" mi="2" ci="11" mb="0" cb="0"/><line nr="93" mi="3" ci="16" mb="0" cb="0"/><line nr="103" mi="2" ci="14" mb="0" cb="0"/><counter type="INSTRUCTION" missed="95" covered="291"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="8" covered="16"/><counter type="METHOD" missed="6" covered="15"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="DirectedEdge.groovy"><line nr="14" mi="9" ci="28" mb="0" cb="4"/><line nr="24" mi="0" ci="7" mb="0" cb="4"/><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="8" mb="1" cb="1"/><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="7" mb="0" cb="0"/><line nr="31" mi="9" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="69"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="115" covered="360"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="1" covered="21"/><counter type="COMPLEXITY" missed="9" covered="23"/><counter type="METHOD" missed="6" covered="18"/><counter type="CLASS" missed="0" covered="5"/></package><package name="graph/type/weighted"><class name="graph/type/weighted/WeightedDirectedGraphType"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convert" desc="()V" line="8"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWeighted" desc="()Z" line="15"><counter type="INSTRUCTION" missed="9" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="38"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/weighted/WeightedEdgeComparator"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="compare" desc="(Lgraph/Edge;Lgraph/Edge;)I" line="10"><counter type="INSTRUCTION" missed="18" covered="101"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="2" covered="8"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="115"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/type/weighted/WeightedGraphType"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convert" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isWeighted" desc="()Z" line="19"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="34"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="WeightedEdgeComparator.groovy"><line nr="10" mi="0" ci="4" mb="0" cb="2"/><line nr="11" mi="0" ci="2" mb="0" cb="0"/><line nr="13" mi="0" ci="16" mb="0" cb="2"/><line nr="14" mi="0" ci="16" mb="0" cb="2"/><line nr="16" mi="0" ci="4" mb="0" cb="2"/><line nr="17" mi="3" ci="4" mb="0" cb="0"/><line nr="18" mi="0" ci="4" mb="0" cb="2"/><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="15" mb="0" cb="0"/><line nr="22" mi="0" ci="15" mb="0" cb="0"/><line nr="23" mi="0" ci="7" mb="0" cb="4"/><line nr="24" mi="3" ci="2" mb="0" cb="0"/><line nr="25" mi="1" ci="6" mb="2" cb="2"/><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="115"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WeightedGraphType.groovy"><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="14" mi="0" ci="21" mb="0" cb="0"/><line nr="19" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="34"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="WeightedDirectedGraphType.groovy"><line nr="8" mi="0" ci="6" mb="0" cb="0"/><line nr="10" mi="0" ci="21" mb="0" cb="0"/><line nr="15" mi="9" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="38"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="40" covered="187"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="2" covered="19"/><counter type="COMPLEXITY" missed="3" covered="14"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="3"/></package><package name="graph"><class name="graph/Graph$_getUnvisitedChildId_closure4"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="279"><counter type="INSTRUCTION" missed="2" covered="62"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColors" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="85"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Graph$_getUnvisitedChildId_closure3"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="277"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/TraversalDsl$Trait$Helper$_findAllBfs_closure8"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="288"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClosure" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/VertexSpec$_applyConnectsTo_closure4"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="145"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="29"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/EdgeDsl$Trait$Helper"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="edge" desc="(Lgraph/EdgeDsl;Ljava/lang/Object;Ljava/lang/Object;)Lgraph/Edge;" line="17"><counter type="INSTRUCTION" missed="2" covered="78"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edge" desc="(Lgraph/EdgeDsl;Ljava/util/Map;)Lgraph/Edge;" line="46"><counter type="INSTRUCTION" missed="16" covered="54"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edge" desc="(Lgraph/EdgeDsl;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;)Lgraph/Edge;" line="64"><counter type="INSTRUCTION" missed="16" covered="88"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edge" desc="(Lgraph/EdgeDsl;Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Closure;)Lgraph/Edge;" line="105"><counter type="INSTRUCTION" missed="16" covered="72"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edge" desc="(Lgraph/EdgeDsl;Ljava/util/Map;Lgroovy/lang/Closure;)Lgraph/Edge;" line="123"><counter type="INSTRUCTION" missed="16" covered="62"/><counter type="BRANCH" missed="5" covered="5"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edge" desc="(Lgraph/EdgeDsl;Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;Lgroovy/lang/Closure;)Lgraph/Edge;" line="143"><counter type="INSTRUCTION" missed="16" covered="96"/><counter type="BRANCH" missed="5" covered="9"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="5" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMetaClass" desc="()Lgroovy/lang/MetaClass;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMetaClass" desc="(Lgroovy/lang/MetaClass;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeMethod" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProperty" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setProperty" desc="(Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="133" covered="450"/><counter type="BRANCH" missed="27" covered="43"/><counter type="LINE" missed="5" covered="23"/><counter type="COMPLEXITY" missed="32" covered="15"/><counter type="METHOD" missed="6" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/VertexDsl$Trait$Helper"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="vertex" desc="(Lgraph/VertexDsl;Ljava/lang/Object;)Lgraph/Vertex;" line="14"><counter type="INSTRUCTION" missed="2" covered="59"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertex" desc="(Lgraph/VertexDsl;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/Set;" line="28"><counter type="INSTRUCTION" missed="2" covered="70"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertex" desc="(Lgraph/VertexDsl;Ljava/util/Map;)Lgraph/Vertex;" line="56"><counter type="INSTRUCTION" missed="12" covered="43"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertex" desc="(Lgraph/VertexDsl;Ljava/lang/Object;Lgroovy/lang/Closure;)Lgraph/Vertex;" line="96"><counter type="INSTRUCTION" missed="12" covered="57"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertex" desc="(Lgraph/VertexDsl;Ljava/lang/Object;Ljava/util/Map;)Lgraph/Vertex;" line="111"><counter type="INSTRUCTION" missed="12" covered="60"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertex" desc="(Lgraph/VertexDsl;Ljava/util/Map;Lgroovy/lang/Closure;)Lgraph/Vertex;" line="127"><counter type="INSTRUCTION" missed="12" covered="51"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertex" desc="(Lgraph/VertexDsl;Ljava/lang/Object;Ljava/util/Map;Lgroovy/lang/Closure;)Lgraph/Vertex;" line="143"><counter type="INSTRUCTION" missed="12" covered="68"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMetaClass" desc="()Lgroovy/lang/MetaClass;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMetaClass" desc="(Lgroovy/lang/MetaClass;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeMethod" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProperty" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setProperty" desc="(Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="115" covered="408"/><counter type="BRANCH" missed="12" covered="18"/><counter type="LINE" missed="5" covered="26"/><counter type="COMPLEXITY" missed="17" covered="11"/><counter type="METHOD" missed="6" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/VertexDsl$Trait$Helper$_vertex_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="31"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/VertexDsl$Trait$Helper$_vertex_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="33"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSet" desc="()Ljava/util/Set;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="26"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/TraversalState"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/util/LinkedHashMap;)V"><counter type="INSTRUCTION" missed="11" covered="28"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="values" desc="()[Lgraph/TraversalState;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lgraph/TraversalState;"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="62"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="37" covered="105"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/VertexSpec$_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/EdgeSpec"><method name="&lt;init&gt;" desc="(Lgraph/Graph;Ljava/util/Map;Lgroovy/lang/Closure;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="478"/><counter type="BRANCH" missed="0" covered="38"/><counter type="LINE" missed="0" covered="33"/><counter type="COMPLEXITY" missed="0" covered="20"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lgraph/Graph;Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGraph" desc="()Lgraph/Graph;" line="26"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getEdge" desc="()Lgraph/Edge;" line="36"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setFrom" desc="(Ljava/lang/Object;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTo" desc="(Ljava/lang/Object;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="changeFrom" desc="(Ljava/lang/Object;)V" line="104"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="changeTo" desc="(Ljava/lang/Object;)V" line="112"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setupGraph" desc="()V" line="116"><counter type="INSTRUCTION" missed="0" covered="59"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initRenameOne" desc="()V" line="126"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initRenameTwo" desc="()V" line="133"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initEntries" desc="()V" line="140"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyClosure" desc="()V" line="144"><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="()Lgraph/Edge;" line="153"><counter type="INSTRUCTION" missed="2" covered="63"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="methodMissing" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="174"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertyMissing" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="184"><counter type="INSTRUCTION" missed="5" covered="45"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertyMissing" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="200"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFrom" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTo" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="28" covered="932"/><counter type="BRANCH" missed="0" covered="60"/><counter type="LINE" missed="2" covered="70"/><counter type="COMPLEXITY" missed="3" covered="46"/><counter type="METHOD" missed="3" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/VertexSpec$_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="67"><counter type="INSTRUCTION" missed="2" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/VertexSpec$_closure3"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="78"><counter type="INSTRUCTION" missed="2" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="35"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/EdgeType"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/util/LinkedHashMap;)V"><counter type="INSTRUCTION" missed="11" covered="28"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="values" desc="()[Lgraph/EdgeType;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lgraph/EdgeType;"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="104"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="37" covered="147"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Graph"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="0" covered="100"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="graph" desc="(Lgroovy/lang/Closure;)Lgraph/Graph;" line="40"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVertices" desc="()Ljava/util/Map;" line="50"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVertex" desc="(Ljava/lang/Object;)Lgraph/Vertex;" line="54"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="delete" desc="(Ljava/lang/Object;)V" line="65"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getEdges" desc="()Ljava/util/Set;" line="78"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEdge" desc="(Lgraph/Edge;)Z" line="88"><counter type="INSTRUCTION" missed="9" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceEdges" desc="(Lgroovy/lang/Closure;)V" line="96"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceEdgesSet" desc="(Ljava/util/Set;)V" line="106"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceVertices" desc="(Lgroovy/lang/Closure;)V" line="118"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceVerticesMap" desc="(Ljava/util/Map;)V" line="128"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="deleteEdge" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="144"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="type" desc="(Ljava/lang/Class;)V" line="152"><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="type" desc="(Ljava/lang/String;)V" line="166"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plugin" desc="(Ljava/lang/Class;)V" line="176"><counter type="INSTRUCTION" missed="0" covered="74"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plugin" desc="(Ljava/lang/String;)V" line="191"><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getType" desc="()Lgraph/type/Type;" line="201"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addVertex" desc="(Lgraph/Vertex;)Z" line="211"><counter type="INSTRUCTION" missed="9" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="changeId" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="220"><counter type="INSTRUCTION" missed="0" covered="122"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertex" desc="(Lgraph/ConfigSpec;)Lgraph/Vertex;" line="244"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edge" desc="(Lgraph/ConfigSpec;)Lgraph/Edge;" line="253"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnvisitedVertexId" desc="(Ljava/util/Map;)Ljava/lang/Object;" line="263"><counter type="INSTRUCTION" missed="2" covered="25"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnvisitedChildId" desc="(Ljava/lang/Object;Ljava/util/Map;)Ljava/lang/Object;" line="276"><counter type="INSTRUCTION" missed="2" covered="79"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="adjacentEdges" desc="(Ljava/lang/Object;)Ljava/util/Set;" line="296"><counter type="INSTRUCTION" missed="2" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="methodMissing" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="311"><counter type="INSTRUCTION" missed="2" covered="112"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preOrder" desc="(Ljava/lang/Object;Ljava/util/Map;Lgroovy/lang/Closure;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="traversal" desc="(Lgroovy/lang/Closure;Ljava/lang/Object;Ljava/util/Map;Lgroovy/lang/Closure;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="traverseEdges" desc="(Ljava/lang/Object;)Ljava/util/Set;"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeColorMap" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="topologicalSort" desc="(Ljava/lang/Object;)Ljava/util/List;"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="postOrder" desc="(Ljava/lang/Object;Ljava/util/Map;Lgroovy/lang/Closure;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reversePostOrder" desc="(Ljava/lang/Object;Lgroovy/lang/Closure;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classifyEdges" desc="(Ljava/lang/Object;Ljava/util/Map;Lgroovy/lang/Closure;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="connectedComponent" desc="(Ljava/lang/Object;Ljava/util/Map;Lgroovy/lang/Closure;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eachBfs" desc="(Ljava/lang/String;Lgroovy/lang/Closure;)V"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="breadthFirstTraversal" desc="(Ljava/lang/Object;Ljava/util/Map;Lgroovy/lang/Closure;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findBfs" desc="(Ljava/lang/String;Lgroovy/lang/Closure;)Lgraph/Vertex;"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="injectBfs" desc="(Ljava/lang/String;Ljava/lang/Object;Lgroovy/lang/Closure;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAllBfs" desc="(Ljava/lang/String;Lgroovy/lang/Closure;)Ljava/util/List;"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectBfs" desc="(Ljava/lang/String;Lgroovy/lang/Closure;)Ljava/util/List;"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preOrder" desc="(Ljava/lang/Object;Lgroovy/lang/Closure;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preOrder" desc="(Lgroovy/lang/Closure;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="topologicalSort" desc="()Ljava/util/List;"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="postOrder" desc="(Ljava/lang/Object;Lgroovy/lang/Closure;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="postOrder" desc="(Lgroovy/lang/Closure;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reversePostOrder" desc="(Lgroovy/lang/Closure;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classifyEdges" desc="(Ljava/lang/Object;Lgroovy/lang/Closure;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="classifyEdges" desc="(Lgroovy/lang/Closure;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="connectedComponent" desc="(Ljava/lang/Object;Lgroovy/lang/Closure;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="connectedComponent" desc="(Lgroovy/lang/Closure;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eachBfs" desc="(Lgroovy/lang/Closure;)V"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="breadthFirstTraversal" desc="(Ljava/lang/Object;Lgroovy/lang/Closure;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="breadthFirstTraversal" desc="(Lgroovy/lang/Closure;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findBfs" desc="(Lgroovy/lang/Closure;)Lgraph/Vertex;"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="injectBfs" desc="(Ljava/lang/Object;Lgroovy/lang/Closure;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAllBfs" desc="(Lgroovy/lang/Closure;)Ljava/util/List;"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectBfs" desc="(Lgroovy/lang/Closure;)Ljava/util/List;"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edge" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lgraph/Edge;"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edge" desc="(Ljava/util/Map;)Lgraph/Edge;"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edge" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;)Lgraph/Edge;"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edge" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Closure;)Lgraph/Edge;"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edge" desc="(Ljava/util/Map;Lgroovy/lang/Closure;)Lgraph/Edge;"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edge" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;Lgroovy/lang/Closure;)Lgraph/Edge;"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertex" desc="(Ljava/lang/Object;)Lgraph/Vertex;"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertex" desc="(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/util/Set;"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertex" desc="(Ljava/util/Map;)Lgraph/Vertex;"><counter type="INSTRUCTION" missed="2" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertex" desc="(Ljava/lang/Object;Lgroovy/lang/Closure;)Lgraph/Vertex;"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertex" desc="(Ljava/lang/Object;Ljava/util/Map;)Lgraph/Vertex;"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertex" desc="(Ljava/util/Map;Lgroovy/lang/Closure;)Lgraph/Vertex;"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="vertex" desc="(Ljava/lang/Object;Ljava/util/Map;Lgroovy/lang/Closure;)Lgraph/Vertex;"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="222" covered="1666"/><counter type="BRANCH" missed="0" covered="38"/><counter type="LINE" missed="0" covered="69"/><counter type="COMPLEXITY" missed="7" covered="83"/><counter type="METHOD" missed="7" covered="64"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/TraversalAlgorithms$_classifyEdgesTraversal_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgraph/TraversalColor;)Ljava/lang/Object;" line="145"><counter type="INSTRUCTION" missed="2" covered="113"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgraph/TraversalColor;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSpec" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAction" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="37" covered="136"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/TraversalColor"><method name="&lt;init&gt;" desc="(Ljava/lang/String;ILjava/util/LinkedHashMap;)V"><counter type="INSTRUCTION" missed="11" covered="28"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="values" desc="()[Lgraph/TraversalColor;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/String;)Lgraph/TraversalColor;"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="83"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="37" covered="126"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Edge"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getFrom" desc="()Ljava/lang/Object;" line="15"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setFrom" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="19"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getTo" desc="()Ljava/lang/Object;" line="23"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setTo" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="27"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asBoolean" desc="()Z" line="31"><counter type="INSTRUCTION" missed="9" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Lgraph/Edge;)Z" line="35"><counter type="INSTRUCTION" missed="9" covered="62"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="47"><counter type="INSTRUCTION" missed="11" covered="34"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="63"><counter type="INSTRUCTION" missed="3" covered="26"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="11"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="11"><counter type="INSTRUCTION" missed="9" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="11"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="11"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="values" desc="()Ljava/util/Collection;" line="11"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="11"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z" line="11"><counter type="INSTRUCTION" missed="9" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="11"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z" line="11"><counter type="INSTRUCTION" missed="9" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceAll" desc="(Ljava/util/function/BiFunction;)V" line="11"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="11"><counter type="INSTRUCTION" missed="3" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="entrySet" desc="()Ljava/util/Set;" line="11"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAll" desc="(Ljava/util/Map;)V" line="11"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putIfAbsent" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="11"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keySet" desc="()Ljava/util/Set;" line="11"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsValue" desc="(Ljava/lang/Object;)Z" line="11"><counter type="INSTRUCTION" missed="9" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsKey" desc="(Ljava/lang/Object;)Z" line="11"><counter type="INSTRUCTION" missed="9" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOrDefault" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="11"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEach" desc="(Ljava/util/function/BiConsumer;)V" line="11"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeIfAbsent" desc="(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;" line="11"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeIfPresent" desc="(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;" line="11"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compute" desc="(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;" line="11"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="merge" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;" line="11"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMap" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMap" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="220" covered="360"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="12" covered="33"/><counter type="METHOD" missed="11" covered="23"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/EdgeSpec$_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="70"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCreated" desc="()Lgraph/Edge;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/EdgeSpec$_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="60"><counter type="INSTRUCTION" missed="2" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/TraversalDsl$Trait$Helper$_eachBfs_closure5"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="208"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClosure" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="32"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/EdgeSpec$_closure4"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="93"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRenamed" desc="()Lgraph/Edge;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/EdgeSpec$_closure3"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="80"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getCreated" desc="()Lgraph/Edge;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/DslScript"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertyMissing" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="33"><counter type="INSTRUCTION" missed="2" covered="28"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertyMissing" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="38"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="methodMissing" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="43"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGraph" desc="()Lgraph/Graph;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setGraph" desc="(Lgraph/Graph;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="59"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/TraversalDsl$Trait$Helper$_injectBfs_closure7"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="267"><counter type="INSTRUCTION" missed="2" covered="27"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResult" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClosure" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="50"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/VertexSpec"><method name="&lt;init&gt;" desc="(Lgraph/Graph;Ljava/util/Map;Lgroovy/lang/Closure;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="480"/><counter type="BRANCH" missed="1" covered="61"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="1" covered="31"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lgraph/Graph;Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getGraph" desc="()Lgraph/Graph;" line="26"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getVertex" desc="()Lgraph/Vertex;" line="34"><counter type="INSTRUCTION" missed="2" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setId" desc="(Ljava/lang/Object;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="changeId" desc="(Ljava/lang/Object;)V" line="104"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connectsTo" desc="([Ljava/lang/Object;)V" line="112"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connectsTo" desc="(Ljava/lang/Object;Lgroovy/lang/Closure;)V" line="116"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connectsFrom" desc="([Ljava/lang/Object;)V" line="125"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connectsFrom" desc="(Ljava/lang/Object;Lgroovy/lang/Closure;)V" line="129"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addEntries" desc="()V" line="134"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyChangeKey" desc="()V" line="138"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyConnectsTo" desc="()V" line="144"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyConnectsFrom" desc="()V" line="150"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="applyClosure" desc="()V" line="156"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="()Lgraph/Vertex;" line="164"><counter type="INSTRUCTION" missed="2" covered="63"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="methodMissing" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="185"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertyMissing" desc="(Ljava/lang/String;)Ljava/lang/Object;" line="195"><counter type="INSTRUCTION" missed="5" covered="45"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="propertyMissing" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" line="210"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="988"/><counter type="BRANCH" missed="1" covered="69"/><counter type="LINE" missed="0" covered="65"/><counter type="COMPLEXITY" missed="1" covered="54"/><counter type="METHOD" missed="0" covered="20"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Graph$_adjacentEdges_closure5"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Lgraph/Edge;)Ljava/lang/Object;" line="297"><counter type="INSTRUCTION" missed="2" covered="27"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lgraph/Edge;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getId" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="42"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/TraversalDsl$Trait$Helper$_reversePostOrder_closure4"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="157"><counter type="INSTRUCTION" missed="2" covered="36"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getResult" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAction" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="59"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/TraversalAlgorithms"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="preOrderTraversal" desc="(Lgraph/Graph;Ljava/util/Map;Lgroovy/lang/Closure;)Ljava/util/Map;" line="44"><counter type="INSTRUCTION" missed="2" covered="304"/><counter type="BRANCH" missed="0" covered="22"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="postOrderTraversal" desc="(Lgraph/Graph;Ljava/util/Map;Lgroovy/lang/Closure;)Ljava/util/Map;" line="78"><counter type="INSTRUCTION" missed="2" covered="304"/><counter type="BRANCH" missed="0" covered="22"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preOrderEdgesTraversal" desc="(Lgraph/Graph;Ljava/util/Map;Lgroovy/lang/Closure;)Ljava/util/Map;" line="111"><counter type="INSTRUCTION" missed="2" covered="285"/><counter type="BRANCH" missed="0" covered="22"/><counter type="LINE" missed="0" covered="22"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classifyEdgesTraversal" desc="(Lgraph/Graph;Ljava/util/Map;Lgroovy/lang/Closure;)Ljava/util/Map;" line="141"><counter type="INSTRUCTION" missed="2" covered="67"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="edgeType" desc="(Ljava/util/Map;Ljava/lang/Object;Ljava/lang/Object;Lgraph/TraversalColor;)Lgraph/EdgeType;" line="157"><counter type="INSTRUCTION" missed="8" covered="140"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="breadthFirstTraversal" desc="(Lgraph/Graph;Ljava/util/Map;Lgroovy/lang/Closure;)Ljava/util/Map;" line="179"><counter type="INSTRUCTION" missed="2" covered="425"/><counter type="BRANCH" missed="0" covered="38"/><counter type="LINE" missed="0" covered="37"/><counter type="COMPLEXITY" missed="0" covered="20"/><counter type="METHOD" missed="0" covered="1"/></method><method name="connectedComponentTraversal" desc="(Lgraph/Graph;Ljava/util/Map;Lgroovy/lang/Closure;)Ljava/util/Map;" line="229"><counter type="INSTRUCTION" missed="2" covered="309"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="0" covered="24"/><counter type="COMPLEXITY" missed="1" covered="11"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="34" covered="1834"/><counter type="BRANCH" missed="1" covered="137"/><counter type="LINE" missed="0" covered="151"/><counter type="COMPLEXITY" missed="2" covered="75"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/TraversalDsl$Trait$Helper$_reversePostOrder_closure3"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Lgraph/Vertex;)Ljava/lang/Object;" line="152"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Lgraph/Vertex;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getSorted" desc="()Ljava/util/List;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="32"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/ConfigSpec"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMap" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMap" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClosure" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setClosure" desc="(Lgroovy/lang/Closure;)V"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/TraversalDsl$Trait$Helper$_topologicalSort_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="107"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSorted" desc="()Ljava/util/List;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="36"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/TraversalDsl$Trait$Helper"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="preOrder" desc="(Lgraph/TraversalDsl;Ljava/lang/Object;Ljava/util/Map;Lgroovy/lang/Closure;)Ljava/util/Map;" line="29"><counter type="INSTRUCTION" missed="2" covered="36"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="traversal" desc="(Lgraph/TraversalDsl;Lgroovy/lang/Closure;Ljava/lang/Object;Ljava/util/Map;Lgroovy/lang/Closure;)Ljava/util/Map;" line="54"><counter type="INSTRUCTION" missed="36" covered="237"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="2" covered="17"/><counter type="COMPLEXITY" missed="5" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="traverseEdges" desc="(Lgraph/TraversalDsl;Ljava/lang/Object;)Ljava/util/Set;" line="85"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="makeColorMap" desc="(Lgraph/TraversalDsl;)Ljava/util/Map;" line="94"><counter type="INSTRUCTION" missed="2" covered="27"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="topologicalSort" desc="(Lgraph/TraversalDsl;Ljava/lang/Object;)Ljava/util/List;" line="105"><counter type="INSTRUCTION" missed="2" covered="43"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="postOrder" desc="(Lgraph/TraversalDsl;Ljava/lang/Object;Ljava/util/Map;Lgroovy/lang/Closure;)Ljava/util/Map;" line="133"><counter type="INSTRUCTION" missed="2" covered="36"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reversePostOrder" desc="(Lgraph/TraversalDsl;Ljava/lang/Object;Lgroovy/lang/Closure;)Ljava/util/Map;" line="150"><counter type="INSTRUCTION" missed="2" covered="105"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classifyEdges" desc="(Lgraph/TraversalDsl;Ljava/lang/Object;Ljava/util/Map;Lgroovy/lang/Closure;)Ljava/util/Map;" line="193"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="connectedComponent" desc="(Lgraph/TraversalDsl;Ljava/lang/Object;Ljava/util/Map;Lgroovy/lang/Closure;)Ljava/util/Map;" line="197"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eachBfs" desc="(Lgraph/TraversalDsl;Ljava/lang/String;Lgroovy/lang/Closure;)V" line="207"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="breadthFirstTraversal" desc="(Lgraph/TraversalDsl;Ljava/lang/Object;Ljava/util/Map;Lgroovy/lang/Closure;)Ljava/util/Map;" line="234"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findBfs" desc="(Lgraph/TraversalDsl;Ljava/lang/String;Lgroovy/lang/Closure;)Lgraph/Vertex;" line="245"><counter type="INSTRUCTION" missed="2" covered="41"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="injectBfs" desc="(Lgraph/TraversalDsl;Ljava/lang/String;Ljava/lang/Object;Lgroovy/lang/Closure;)Ljava/lang/Object;" line="265"><counter type="INSTRUCTION" missed="2" covered="41"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAllBfs" desc="(Lgraph/TraversalDsl;Ljava/lang/String;Lgroovy/lang/Closure;)Ljava/util/List;" line="281"><counter type="INSTRUCTION" missed="2" covered="65"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectBfs" desc="(Lgraph/TraversalDsl;Ljava/lang/String;Lgroovy/lang/Closure;)Ljava/util/List;" line="303"><counter type="INSTRUCTION" missed="2" covered="67"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preOrder" desc="(Lgraph/TraversalDsl;Ljava/lang/Object;Lgroovy/lang/Closure;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="preOrder" desc="(Lgraph/TraversalDsl;Lgroovy/lang/Closure;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="topologicalSort" desc="(Lgraph/TraversalDsl;)Ljava/util/List;"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="postOrder" desc="(Lgraph/TraversalDsl;Ljava/lang/Object;Lgroovy/lang/Closure;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="postOrder" desc="(Lgraph/TraversalDsl;Lgroovy/lang/Closure;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reversePostOrder" desc="(Lgraph/TraversalDsl;Lgroovy/lang/Closure;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classifyEdges" desc="(Lgraph/TraversalDsl;Ljava/lang/Object;Lgroovy/lang/Closure;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="classifyEdges" desc="(Lgraph/TraversalDsl;Lgroovy/lang/Closure;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="connectedComponent" desc="(Lgraph/TraversalDsl;Ljava/lang/Object;Lgroovy/lang/Closure;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="connectedComponent" desc="(Lgraph/TraversalDsl;Lgroovy/lang/Closure;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="eachBfs" desc="(Lgraph/TraversalDsl;Lgroovy/lang/Closure;)V"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="breadthFirstTraversal" desc="(Lgraph/TraversalDsl;Ljava/lang/Object;Lgroovy/lang/Closure;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="breadthFirstTraversal" desc="(Lgraph/TraversalDsl;Lgroovy/lang/Closure;)Ljava/util/Map;"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findBfs" desc="(Lgraph/TraversalDsl;Lgroovy/lang/Closure;)Lgraph/Vertex;"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="injectBfs" desc="(Lgraph/TraversalDsl;Ljava/lang/Object;Lgroovy/lang/Closure;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findAllBfs" desc="(Lgraph/TraversalDsl;Lgroovy/lang/Closure;)Ljava/util/List;"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="collectBfs" desc="(Lgraph/TraversalDsl;Lgroovy/lang/Closure;)Ljava/util/List;"><counter type="INSTRUCTION" missed="2" covered="26"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMetaClass" desc="()Lgroovy/lang/MetaClass;"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMetaClass" desc="(Lgroovy/lang/MetaClass;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeMethod" desc="(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getProperty" desc="(Ljava/lang/String;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setProperty" desc="(Ljava/lang/String;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="291" covered="1040"/><counter type="BRANCH" missed="7" covered="17"/><counter type="LINE" missed="4" covered="47"/><counter type="COMPLEXITY" missed="19" covered="31"/><counter type="METHOD" missed="13" covered="25"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/TraversalDsl$Trait$Helper$_makeColorMap_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="95"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="25"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Graph$_getUnvisitedVertexId_closure2"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="264"><counter type="INSTRUCTION" missed="2" covered="37"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getColors" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="52"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Graph$_methodMissing_closure6"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="317"><counter type="INSTRUCTION" missed="2" covered="40"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getName" desc="()Ljava/lang/String;"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getArgs" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="63"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/TraversalDsl$Trait$Helper$_collectBfs_closure9"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="310"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getClosure" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="31"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/TraversalDsl$Trait$Helper$_findBfs_closure6"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="247"><counter type="INSTRUCTION" missed="2" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getClosure" desc="()Lgroovy/lang/Closure;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getResult" desc="()Lgraph/Vertex;"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="59"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Graph$_methodMissing_closure7"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="323"><counter type="INSTRUCTION" missed="2" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/VertexSpec$_applyConnectsFrom_closure5"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="151"><counter type="INSTRUCTION" missed="2" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="29"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Graph$_changeId_closure1"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;Lgroovy/lang/Reference;Lgroovy/lang/Reference;)V"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doCall" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="228"><counter type="INSTRUCTION" missed="5" covered="48"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getNewId" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="doCall" desc="()Ljava/lang/Object;"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="71"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="3" covered="4"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="graph/Vertex"><method name="&lt;init&gt;" desc="()V"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getId" desc="()Ljava/lang/Object;" line="13"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setId" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="17"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asBoolean" desc="()Z" line="21"><counter type="INSTRUCTION" missed="9" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Lgraph/Vertex;)Z" line="25"><counter type="INSTRUCTION" missed="9" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="30"><counter type="INSTRUCTION" missed="39" covered="10"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="9"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="9"><counter type="INSTRUCTION" missed="9" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="9"><counter type="INSTRUCTION" missed="2" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="9"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="values" desc="()Ljava/util/Collection;" line="9"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="clear" desc="()V" line="9"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEmpty" desc="()Z" line="9"><counter type="INSTRUCTION" missed="9" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="9"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replace" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z" line="9"><counter type="INSTRUCTION" missed="9" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="replaceAll" desc="(Ljava/util/function/BiFunction;)V" line="9"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="size" desc="()I" line="9"><counter type="INSTRUCTION" missed="3" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="entrySet" desc="()Ljava/util/Set;" line="9"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAll" desc="(Ljava/util/Map;)V" line="9"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putIfAbsent" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="9"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="keySet" desc="()Ljava/util/Set;" line="9"><counter type="INSTRUCTION" missed="2" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsValue" desc="(Ljava/lang/Object;)Z" line="9"><counter type="INSTRUCTION" missed="9" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsKey" desc="(Ljava/lang/Object;)Z" line="9"><counter type="INSTRUCTION" missed="9" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOrDefault" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="9"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEach" desc="(Ljava/util/function/BiConsumer;)V" line="9"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeIfAbsent" desc="(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;" line="9"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="computeIfPresent" desc="(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;" line="9"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="compute" desc="(Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;" line="9"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="merge" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/lang/Object;" line="9"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMap" desc="()Ljava/util/Map;"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setMap" desc="(Ljava/util/Map;)V"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="241" covered="232"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="14" covered="20"/><counter type="METHOD" missed="11" covered="20"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DslScript.groovy"><line nr="29" mi="0" ci="16" mb="0" cb="0"/><line nr="33" mi="2" ci="26" mb="0" cb="0"/><line nr="38" mi="32" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="59"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EdgeType.groovy"><counter type="INSTRUCTION" missed="37" covered="147"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TraversalState.groovy"><counter type="INSTRUCTION" missed="37" covered="105"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TraversalDsl.groovy"><line nr="29" mi="2" ci="34" mb="0" cb="0"/><line nr="54" mi="4" ci="15" mb="3" cb="5"/><line nr="55" mi="26" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="12" mb="0" cb="0"/><line nr="59" mi="2" ci="20" mb="1" cb="1"/><line nr="60" mi="0" ci="10" mb="0" cb="0"/><line nr="61" mi="0" ci="11" mb="0" cb="4"/><line nr="62" mi="0" ci="24" mb="0" cb="0"/><line nr="64" mi="0" ci="15" mb="0" cb="0"/><line nr="65" mi="0" ci="15" mb="0" cb="0"/><line nr="66" mi="0" ci="7" mb="0" cb="2"/><line nr="67" mi="0" ci="15" mb="0" cb="0"/><line nr="68" mi="0" ci="14" mb="0" cb="0"/><line nr="69" mi="0" ci="15" mb="0" cb="0"/><line nr="70" mi="0" ci="17" mb="0" cb="0"/><line nr="71" mi="0" ci="12" mb="1" cb="1"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="25" mb="0" cb="0"/><line nr="76" mi="2" ci="2" mb="0" cb="0"/><line nr="85" mi="2" ci="14" mb="0" cb="0"/><line nr="94" mi="2" ci="25" mb="0" cb="0"/><line nr="95" mi="2" ci="16" mb="0" cb="0"/><line nr="105" mi="0" ci="10" mb="0" cb="0"/><line nr="106" mi="0" ci="20" mb="0" cb="0"/><line nr="107" mi="0" ci="13" mb="0" cb="0"/><line nr="108" mi="2" ci="6" mb="0" cb="0"/><line nr="110" mi="2" ci="11" mb="0" cb="0"/><line nr="133" mi="2" ci="34" mb="0" cb="0"/><line nr="150" mi="0" ci="10" mb="0" cb="0"/><line nr="151" mi="0" ci="29" mb="0" cb="0"/><line nr="152" mi="0" ci="9" mb="0" cb="0"/><line nr="153" mi="2" ci="6" mb="0" cb="0"/><line nr="155" mi="0" ci="18" mb="0" cb="0"/><line nr="156" mi="0" ci="22" mb="0" cb="0"/><line nr="157" mi="0" ci="19" mb="0" cb="0"/><line nr="158" mi="2" ci="15" mb="0" cb="0"/><line nr="160" mi="2" ci="18" mb="0" cb="0"/><line nr="193" mi="24" ci="0" mb="0" cb="0"/><line nr="197" mi="24" ci="0" mb="0" cb="0"/><line nr="207" mi="0" ci="21" mb="0" cb="0"/><line nr="208" mi="0" ci="9" mb="0" cb="0"/><line nr="209" mi="2" ci="6" mb="0" cb="0"/><line nr="234" mi="2" ci="15" mb="0" cb="0"/><line nr="245" mi="0" ci="8" mb="0" cb="0"/><line nr="246" mi="0" ci="21" mb="0" cb="0"/><line nr="247" mi="0" ci="10" mb="0" cb="2"/><line nr="248" mi="0" ci="12" mb="0" cb="0"/><line nr="249" mi="0" ci="6" mb="0" cb="0"/><line nr="251" mi="2" ci="6" mb="0" cb="0"/><line nr="253" mi="2" ci="4" mb="0" cb="0"/><line nr="265" mi="0" ci="8" mb="0" cb="0"/><line nr="266" mi="0" ci="21" mb="0" cb="0"/><line nr="267" mi="0" ci="19" mb="0" cb="0"/><line nr="268" mi="2" ci="6" mb="0" cb="0"/><line nr="270" mi="2" ci="4" mb="0" cb="0"/><line nr="281" mi="0" ci="4" mb="0" cb="0"/><line nr="282" mi="0" ci="3" mb="0" cb="2"/><line nr="283" mi="0" ci="17" mb="0" cb="0"/><line nr="285" mi="0" ci="8" mb="0" cb="0"/><line nr="287" mi="2" ci="25" mb="0" cb="0"/><line nr="288" mi="0" ci="10" mb="0" cb="2"/><line nr="289" mi="0" ci="7" mb="0" cb="0"/><line nr="291" mi="2" ci="2" mb="0" cb="0"/><line nr="303" mi="0" ci="4" mb="0" cb="0"/><line nr="304" mi="0" ci="3" mb="0" cb="2"/><line nr="305" mi="0" ci="17" mb="0" cb="0"/><line nr="307" mi="0" ci="8" mb="0" cb="0"/><line nr="309" mi="2" ci="27" mb="0" cb="0"/><line nr="310" mi="2" ci="14" mb="0" cb="0"/><counter type="INSTRUCTION" missed="490" covered="1400"/><counter type="BRANCH" missed="7" covered="21"/><counter type="LINE" missed="4" covered="66"/><counter type="COMPLEXITY" missed="36" covered="51"/><counter type="METHOD" missed="30" covered="43"/><counter type="CLASS" missed="0" covered="10"/></sourcefile><sourcefile name="ConfigSpec.groovy"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VertexDsl.groovy"><line nr="14" mi="0" ci="7" mb="0" cb="4"/><line nr="15" mi="0" ci="8" mb="0" cb="0"/><line nr="17" mi="0" ci="32" mb="0" cb="0"/><line nr="18" mi="2" ci="10" mb="0" cb="0"/><line nr="28" mi="0" ci="15" mb="0" cb="0"/><line nr="29" mi="0" ci="14" mb="0" cb="0"/><line nr="30" mi="0" ci="20" mb="0" cb="0"/><line nr="31" mi="2" ci="7" mb="0" cb="0"/><line nr="32" mi="0" ci="15" mb="0" cb="0"/><line nr="33" mi="2" ci="9" mb="0" cb="0"/><line nr="35" mi="2" ci="4" mb="0" cb="0"/><line nr="56" mi="2" ci="9" mb="2" cb="2"/><line nr="57" mi="8" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="22" mb="0" cb="0"/><line nr="60" mi="2" ci="10" mb="0" cb="0"/><line nr="96" mi="2" ci="5" mb="2" cb="2"/><line nr="97" mi="8" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="40" mb="0" cb="0"/><line nr="100" mi="2" ci="10" mb="0" cb="0"/><line nr="111" mi="2" ci="5" mb="2" cb="2"/><line nr="112" mi="8" ci="0" mb="0" cb="0"/><line nr="114" mi="0" ci="21" mb="0" cb="2"/><line nr="115" mi="0" ci="22" mb="0" cb="0"/><line nr="116" mi="2" ci="10" mb="0" cb="0"/><line nr="127" mi="2" ci="9" mb="2" cb="2"/><line nr="128" mi="8" ci="0" mb="0" cb="0"/><line nr="130" mi="0" ci="30" mb="0" cb="0"/><line nr="131" mi="2" ci="10" mb="0" cb="0"/><line nr="143" mi="2" ci="5" mb="2" cb="2"/><line nr="144" mi="8" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="21" mb="0" cb="2"/><line nr="147" mi="0" ci="30" mb="0" cb="0"/><line nr="148" mi="2" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="146" covered="450"/><counter type="BRANCH" missed="12" covered="18"/><counter type="LINE" missed="5" covered="28"/><counter type="COMPLEXITY" missed="20" covered="15"/><counter type="METHOD" missed="9" covered="11"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="Graph.groovy"><line nr="25" mi="0" ci="13" mb="0" cb="0"/><line nr="27" mi="0" ci="43" mb="0" cb="0"/><line nr="30" mi="0" ci="15" mb="0" cb="0"/><line nr="31" mi="0" ci="12" mb="0" cb="0"/><line nr="40" mi="0" ci="11" mb="0" cb="0"/><line nr="41" mi="0" ci="7" mb="0" cb="0"/><line nr="42" mi="2" ci="2" mb="0" cb="0"/><line nr="50" mi="2" ci="11" mb="0" cb="0"/><line nr="54" mi="2" ci="11" mb="0" cb="0"/><line nr="65" mi="0" ci="8" mb="0" cb="2"/><line nr="66" mi="0" ci="26" mb="0" cb="0"/><line nr="70" mi="0" ci="9" mb="0" cb="0"/><line nr="78" mi="2" ci="11" mb="0" cb="0"/><line nr="88" mi="9" ci="9" mb="0" cb="0"/><line nr="96" mi="0" ci="13" mb="0" cb="0"/><line nr="97" mi="0" ci="7" mb="0" cb="0"/><line nr="98" mi="0" ci="9" mb="0" cb="0"/><line nr="106" mi="0" ci="11" mb="0" cb="4"/><line nr="107" mi="0" ci="8" mb="0" cb="0"/><line nr="109" mi="0" ci="8" mb="0" cb="0"/><line nr="110" mi="0" ci="9" mb="0" cb="0"/><line nr="118" mi="0" ci="13" mb="0" cb="0"/><line nr="119" mi="0" ci="7" mb="0" cb="0"/><line nr="120" mi="0" ci="9" mb="0" cb="0"/><line nr="128" mi="0" ci="11" mb="0" cb="4"/><line nr="129" mi="0" ci="8" mb="0" cb="0"/><line nr="131" mi="0" ci="8" mb="0" cb="0"/><line nr="132" mi="0" ci="9" mb="0" cb="0"/><line nr="144" mi="0" ci="33" mb="0" cb="0"/><line nr="152" mi="0" ci="12" mb="0" cb="4"/><line nr="153" mi="0" ci="30" mb="0" cb="0"/><line nr="155" mi="0" ci="15" mb="0" cb="0"/><line nr="156" mi="0" ci="11" mb="0" cb="0"/><line nr="157" mi="0" ci="8" mb="0" cb="0"/><line nr="166" mi="0" ci="11" mb="0" cb="0"/><line nr="167" mi="0" ci="34" mb="0" cb="0"/><line nr="168" mi="0" ci="29" mb="0" cb="0"/><line nr="176" mi="0" ci="12" mb="0" cb="4"/><line nr="177" mi="0" ci="30" mb="0" cb="0"/><line nr="179" mi="0" ci="11" mb="0" cb="0"/><line nr="180" mi="0" ci="10" mb="0" cb="0"/><line nr="181" mi="0" ci="9" mb="0" cb="0"/><line nr="191" mi="0" ci="11" mb="0" cb="0"/><line nr="192" mi="0" ci="34" mb="0" cb="0"/><line nr="193" mi="0" ci="29" mb="0" cb="0"/><line nr="201" mi="2" ci="3" mb="0" cb="0"/><line nr="211" mi="9" ci="18" mb="0" cb="0"/><line nr="220" mi="0" ci="22" mb="0" cb="10"/><line nr="221" mi="0" ci="8" mb="0" cb="0"/><line nr="223" mi="0" ci="14" mb="0" cb="0"/><line nr="224" mi="0" ci="12" mb="0" cb="0"/><line nr="225" mi="0" ci="12" mb="0" cb="0"/><line nr="226" mi="0" ci="19" mb="0" cb="0"/><line nr="227" mi="0" ci="21" mb="0" cb="0"/><line nr="228" mi="0" ci="10" mb="0" cb="2"/><line nr="229" mi="0" ci="12" mb="0" cb="0"/><line nr="231" mi="0" ci="10" mb="0" cb="2"/><line nr="232" mi="5" ci="14" mb="0" cb="0"/><line nr="244" mi="2" ci="24" mb="0" cb="0"/><line nr="253" mi="2" ci="24" mb="0" cb="0"/><line nr="263" mi="2" ci="17" mb="0" cb="0"/><line nr="264" mi="2" ci="35" mb="0" cb="4"/><line nr="276" mi="0" ci="34" mb="0" cb="0"/><line nr="277" mi="2" ci="13" mb="0" cb="0"/><line nr="279" mi="0" ci="24" mb="0" cb="2"/><line nr="280" mi="0" ci="15" mb="0" cb="0"/><line nr="281" mi="2" ci="21" mb="0" cb="4"/><line nr="284" mi="0" ci="7" mb="0" cb="4"/><line nr="285" mi="0" ci="2" mb="0" cb="0"/><line nr="287" mi="2" ci="22" mb="0" cb="2"/><line nr="296" mi="2" ci="16" mb="0" cb="0"/><line nr="297" mi="2" ci="25" mb="0" cb="4"/><line nr="311" mi="0" ci="21" mb="0" cb="0"/><line nr="312" mi="0" ci="4" mb="0" cb="2"/><line nr="313" mi="0" ci="10" mb="0" cb="0"/><line nr="316" mi="0" ci="25" mb="0" cb="0"/><line nr="317" mi="0" ci="21" mb="0" cb="0"/><line nr="318" mi="0" ci="3" mb="0" cb="2"/><line nr="319" mi="0" ci="12" mb="0" cb="0"/><line nr="321" mi="2" ci="2" mb="0" cb="0"/><line nr="323" mi="2" ci="2" mb="0" cb="0"/><line nr="326" mi="0" ci="4" mb="0" cb="2"/><line nr="327" mi="0" ci="21" mb="0" cb="0"/><line nr="329" mi="2" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="358" covered="2012"/><counter type="BRANCH" missed="0" covered="58"/><counter type="LINE" missed="0" covered="84"/><counter type="COMPLEXITY" missed="20" covered="107"/><counter type="METHOD" missed="20" covered="78"/><counter type="CLASS" missed="0" covered="8"/></sourcefile><sourcefile name="EdgeSpec.groovy"><line nr="26" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="7" mb="0" cb="0"/><line nr="41" mi="0" ci="9" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="9" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="4"/><line nr="51" mi="0" ci="8" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="4"/><line nr="54" mi="0" ci="8" mb="0" cb="0"/><line nr="56" mi="0" ci="11" mb="0" cb="0"/><line nr="58" mi="0" ci="26" mb="0" cb="0"/><line nr="60" mi="2" ci="37" mb="0" cb="2"/><line nr="62" mi="0" ci="12" mb="0" cb="0"/><line nr="63" mi="0" ci="12" mb="0" cb="0"/><line nr="64" mi="0" ci="12" mb="0" cb="0"/><line nr="65" mi="0" ci="12" mb="0" cb="0"/><line nr="67" mi="0" ci="8" mb="0" cb="0"/><line nr="69" mi="0" ci="36" mb="0" cb="0"/><line nr="70" mi="2" ci="28" mb="0" cb="0"/><line nr="71" mi="0" ci="10" mb="0" cb="0"/><line nr="73" mi="0" ci="7" mb="0" cb="4"/><line nr="74" mi="0" ci="17" mb="0" cb="2"/><line nr="75" mi="0" ci="17" mb="0" cb="2"/><line nr="76" mi="0" ci="8" mb="0" cb="0"/><line nr="77" mi="0" ci="8" mb="0" cb="0"/><line nr="78" mi="0" ci="13" mb="0" cb="0"/><line nr="79" mi="0" ci="13" mb="0" cb="0"/><line nr="80" mi="2" ci="30" mb="0" cb="0"/><line nr="81" mi="0" ci="10" mb="0" cb="0"/><line nr="84" mi="0" ci="17" mb="0" cb="2"/><line nr="85" mi="0" ci="8" mb="0" cb="4"/><line nr="86" mi="0" ci="8" mb="0" cb="0"/><line nr="88" mi="0" ci="8" mb="0" cb="4"/><line nr="89" mi="0" ci="8" mb="0" cb="0"/><line nr="91" mi="0" ci="12" mb="0" cb="6"/><line nr="92" mi="0" ci="52" mb="0" cb="4"/><line nr="93" mi="2" ci="24" mb="0" cb="2"/><line nr="94" mi="0" ci="9" mb="0" cb="0"/><line nr="104" mi="0" ci="49" mb="0" cb="0"/><line nr="112" mi="0" ci="49" mb="0" cb="0"/><line nr="116" mi="0" ci="19" mb="0" cb="10"/><line nr="118" mi="0" ci="19" mb="0" cb="0"/><line nr="121" mi="0" ci="9" mb="0" cb="0"/><line nr="122" mi="0" ci="10" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="2"/><line nr="127" mi="0" ci="9" mb="0" cb="0"/><line nr="128" mi="0" ci="13" mb="0" cb="0"/><line nr="133" mi="0" ci="4" mb="0" cb="2"/><line nr="134" mi="0" ci="9" mb="0" cb="0"/><line nr="135" mi="0" ci="13" mb="0" cb="0"/><line nr="140" mi="0" ci="10" mb="0" cb="0"/><line nr="144" mi="0" ci="8" mb="0" cb="4"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="0" ci="11" mb="0" cb="0"/><line nr="148" mi="0" ci="15" mb="0" cb="0"/><line nr="149" mi="0" ci="7" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="2"/><line nr="154" mi="0" ci="8" mb="0" cb="0"/><line nr="156" mi="0" ci="8" mb="0" cb="0"/><line nr="157" mi="0" ci="6" mb="0" cb="0"/><line nr="158" mi="0" ci="6" mb="0" cb="0"/><line nr="159" mi="0" ci="6" mb="0" cb="0"/><line nr="160" mi="0" ci="6" mb="0" cb="0"/><line nr="161" mi="0" ci="9" mb="0" cb="0"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="2" ci="3" mb="0" cb="0"/><line nr="174" mi="2" ci="9" mb="0" cb="0"/><line nr="184" mi="0" ci="9" mb="0" cb="2"/><line nr="185" mi="3" ci="8" mb="0" cb="0"/><line nr="187" mi="2" ci="26" mb="0" cb="0"/><line nr="200" mi="2" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="101" covered="1030"/><counter type="BRANCH" missed="0" covered="62"/><counter type="LINE" missed="2" covered="70"/><counter type="COMPLEXITY" missed="10" covered="55"/><counter type="METHOD" missed="10" covered="24"/><counter type="CLASS" missed="0" covered="5"/></sourcefile><sourcefile name="Vertex.groovy"><line nr="9" mi="155" ci="128" mb="0" cb="0"/><line nr="13" mi="2" ci="7" mb="0" cb="0"/><line nr="17" mi="2" ci="8" mb="0" cb="0"/><line nr="21" mi="9" ci="7" mb="0" cb="0"/><line nr="25" mi="9" ci="12" mb="0" cb="0"/><line nr="30" mi="1" ci="6" mb="2" cb="2"/><line nr="31" mi="0" ci="2" mb="0" cb="0"/><line nr="33" mi="8" ci="0" mb="2" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="7" ci="0" mb="0" cb="0"/><line nr="37" mi="21" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="241" covered="232"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="14" covered="20"/><counter type="METHOD" missed="11" covered="20"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EdgeDsl.groovy"><line nr="17" mi="0" ci="18" mb="0" cb="10"/><line nr="18" mi="0" ci="8" mb="0" cb="0"/><line nr="20" mi="0" ci="40" mb="0" cb="0"/><line nr="21" mi="2" ci="10" mb="0" cb="0"/><line nr="46" mi="6" ci="20" mb="5" cb="5"/><line nr="47" mi="8" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="22" mb="0" cb="0"/><line nr="50" mi="2" ci="10" mb="0" cb="0"/><line nr="64" mi="6" ci="12" mb="5" cb="5"/><line nr="65" mi="8" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="21" mb="0" cb="2"/><line nr="68" mi="0" ci="21" mb="0" cb="2"/><line nr="69" mi="0" ci="22" mb="0" cb="0"/><line nr="70" mi="2" ci="10" mb="0" cb="0"/><line nr="105" mi="6" ci="12" mb="5" cb="5"/><line nr="106" mi="8" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="48" mb="0" cb="0"/><line nr="109" mi="2" ci="10" mb="0" cb="0"/><line nr="123" mi="6" ci="20" mb="5" cb="5"/><line nr="124" mi="8" ci="0" mb="0" cb="0"/><line nr="126" mi="0" ci="30" mb="0" cb="0"/><line nr="127" mi="2" ci="10" mb="0" cb="0"/><line nr="143" mi="6" ci="12" mb="5" cb="5"/><line nr="144" mi="8" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="21" mb="0" cb="2"/><line nr="147" mi="0" ci="21" mb="0" cb="2"/><line nr="148" mi="0" ci="30" mb="0" cb="0"/><line nr="149" mi="2" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="133" covered="450"/><counter type="BRANCH" missed="27" covered="43"/><counter type="LINE" missed="5" covered="23"/><counter type="COMPLEXITY" missed="32" covered="15"/><counter type="METHOD" missed="6" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VertexSpec.groovy"><line nr="14" mi="0" ci="13" mb="0" cb="0"/><line nr="15" mi="0" ci="22" mb="0" cb="0"/><line nr="26" mi="2" ci="3" mb="0" cb="0"/><line nr="34" mi="2" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="39" mi="0" ci="9" mb="0" cb="0"/><line nr="43" mi="0" ci="7" mb="0" cb="4"/><line nr="44" mi="0" ci="8" mb="0" cb="0"/><line nr="46" mi="0" ci="7" mb="0" cb="4"/><line nr="47" mi="0" ci="8" mb="0" cb="0"/><line nr="49" mi="0" ci="11" mb="0" cb="0"/><line nr="51" mi="0" ci="26" mb="0" cb="0"/><line nr="53" mi="2" ci="37" mb="0" cb="2"/><line nr="55" mi="0" ci="23" mb="1" cb="7"/><line nr="56" mi="0" ci="8" mb="0" cb="0"/><line nr="58" mi="0" ci="12" mb="0" cb="0"/><line nr="60" mi="0" ci="23" mb="0" cb="8"/><line nr="61" mi="0" ci="8" mb="0" cb="0"/><line nr="63" mi="0" ci="12" mb="0" cb="0"/><line nr="65" mi="0" ci="37" mb="0" cb="10"/><line nr="66" mi="0" ci="16" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="4"/><line nr="68" mi="0" ci="8" mb="0" cb="0"/><line nr="70" mi="2" ci="11" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="2"/><line nr="73" mi="0" ci="12" mb="0" cb="0"/><line nr="76" mi="0" ci="37" mb="0" cb="10"/><line nr="77" mi="0" ci="16" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="4"/><line nr="79" mi="0" ci="8" mb="0" cb="0"/><line nr="81" mi="2" ci="11" mb="0" cb="0"/><line nr="83" mi="0" ci="7" mb="0" cb="2"/><line nr="84" mi="0" ci="12" mb="0" cb="0"/><line nr="86" mi="0" ci="8" mb="0" cb="0"/><line nr="88" mi="0" ci="17" mb="0" cb="4"/><line nr="89" mi="0" ci="17" mb="0" cb="2"/><line nr="90" mi="0" ci="8" mb="0" cb="0"/><line nr="92" mi="0" ci="44" mb="0" cb="2"/><line nr="94" mi="0" ci="21" mb="0" cb="6"/><line nr="95" mi="0" ci="9" mb="0" cb="0"/><line nr="104" mi="0" ci="36" mb="0" cb="0"/><line nr="112" mi="0" ci="36" mb="0" cb="0"/><line nr="116" mi="0" ci="35" mb="0" cb="0"/><line nr="117" mi="0" ci="24" mb="0" cb="0"/><line nr="125" mi="0" ci="36" mb="0" cb="0"/><line nr="129" mi="0" ci="35" mb="0" cb="0"/><line nr="130" mi="0" ci="24" mb="0" cb="0"/><line nr="134" mi="0" ci="10" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="2"/><line nr="139" mi="0" ci="12" mb="0" cb="0"/><line nr="144" mi="0" ci="13" mb="0" cb="0"/><line nr="145" mi="2" ci="20" mb="0" cb="0"/><line nr="150" mi="0" ci="13" mb="0" cb="0"/><line nr="151" mi="2" ci="20" mb="0" cb="0"/><line nr="156" mi="0" ci="4" mb="0" cb="2"/><line nr="157" mi="0" ci="11" mb="0" cb="0"/><line nr="158" mi="0" ci="15" mb="0" cb="0"/><line nr="159" mi="0" ci="7" mb="0" cb="0"/><line nr="164" mi="0" ci="3" mb="0" cb="2"/><line nr="165" mi="0" ci="8" mb="0" cb="0"/><line nr="167" mi="0" ci="8" mb="0" cb="0"/><line nr="168" mi="0" ci="6" mb="0" cb="0"/><line nr="169" mi="0" ci="6" mb="0" cb="0"/><line nr="170" mi="0" ci="6" mb="0" cb="0"/><line nr="171" mi="0" ci="6" mb="0" cb="0"/><line nr="172" mi="0" ci="9" mb="0" cb="0"/><line nr="173" mi="0" ci="6" mb="0" cb="0"/><line nr="174" mi="2" ci="3" mb="0" cb="0"/><line nr="185" mi="2" ci="9" mb="0" cb="0"/><line nr="195" mi="0" ci="9" mb="0" cb="2"/><line nr="196" mi="3" ci="8" mb="0" cb="0"/><line nr="198" mi="2" ci="26" mb="0" cb="0"/><line nr="210" mi="2" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="65" covered="1142"/><counter type="BRANCH" missed="1" covered="79"/><counter type="LINE" missed="0" covered="73"/><counter type="COMPLEXITY" missed="6" covered="69"/><counter type="METHOD" missed="5" covered="30"/><counter type="CLASS" missed="0" covered="6"/></sourcefile><sourcefile name="TraversalColor.groovy"><counter type="INSTRUCTION" missed="37" covered="126"/><counter type="BRANCH" missed="1" covered="1"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Edge.groovy"><line nr="11" mi="155" ci="128" mb="0" cb="0"/><line nr="15" mi="2" ci="7" mb="0" cb="0"/><line nr="19" mi="2" ci="8" mb="0" cb="0"/><line nr="23" mi="2" ci="7" mb="0" cb="0"/><line nr="27" mi="2" ci="8" mb="0" cb="0"/><line nr="31" mi="9" ci="18" mb="0" cb="4"/><line nr="35" mi="9" ci="60" mb="0" cb="12"/><line nr="47" mi="0" ci="7" mb="0" cb="4"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="1" cb="1"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="9" ci="8" mb="0" cb="0"/><line nr="63" mi="3" ci="24" mb="0" cb="0"/><counter type="INSTRUCTION" missed="220" covered="360"/><counter type="BRANCH" missed="1" covered="21"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="12" covered="33"/><counter type="METHOD" missed="11" covered="23"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TraversalAlgorithms.groovy"><line nr="44" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="11" mb="0" cb="0"/><line nr="46" mi="0" ci="8" mb="0" cb="2"/><line nr="47" mi="0" ci="18" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="4"/><line nr="49" mi="0" ci="8" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="2"/><line nr="52" mi="0" ci="16" mb="0" cb="0"/><line nr="53" mi="0" ci="14" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="16" mb="0" cb="0"/><line nr="59" mi="0" ci="12" mb="0" cb="0"/><line nr="60" mi="0" ci="13" mb="0" cb="2"/><line nr="61" mi="0" ci="13" mb="0" cb="0"/><line nr="62" mi="0" ci="22" mb="0" cb="2"/><line nr="63" mi="0" ci="29" mb="0" cb="8"/><line nr="64" mi="0" ci="16" mb="0" cb="0"/><line nr="65" mi="0" ci="10" mb="0" cb="0"/><line nr="66" mi="0" ci="9" mb="0" cb="0"/><line nr="67" mi="0" ci="12" mb="0" cb="2"/><line nr="68" mi="0" ci="18" mb="0" cb="0"/><line nr="72" mi="0" ci="16" mb="0" cb="0"/><line nr="73" mi="0" ci="14" mb="0" cb="0"/><line nr="74" mi="2" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="8" mb="0" cb="0"/><line nr="79" mi="0" ci="11" mb="0" cb="0"/><line nr="80" mi="0" ci="16" mb="0" cb="0"/><line nr="81" mi="0" ci="12" mb="0" cb="0"/><line nr="82" mi="0" ci="13" mb="0" cb="2"/><line nr="83" mi="0" ci="13" mb="0" cb="0"/><line nr="84" mi="0" ci="22" mb="0" cb="2"/><line nr="85" mi="0" ci="29" mb="0" cb="8"/><line nr="86" mi="0" ci="16" mb="0" cb="0"/><line nr="87" mi="0" ci="10" mb="0" cb="0"/><line nr="88" mi="0" ci="9" mb="0" cb="0"/><line nr="89" mi="0" ci="12" mb="0" cb="2"/><line nr="90" mi="0" ci="18" mb="0" cb="0"/><line nr="94" mi="0" ci="8" mb="0" cb="2"/><line nr="95" mi="0" ci="18" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="4"/><line nr="97" mi="0" ci="8" mb="0" cb="0"/><line nr="99" mi="0" ci="8" mb="0" cb="2"/><line nr="100" mi="0" ci="16" mb="0" cb="0"/><line nr="101" mi="0" ci="14" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="16" mb="0" cb="0"/><line nr="106" mi="0" ci="14" mb="0" cb="0"/><line nr="107" mi="2" ci="2" mb="0" cb="0"/><line nr="111" mi="0" ci="8" mb="0" cb="0"/><line nr="112" mi="0" ci="11" mb="0" cb="0"/><line nr="113" mi="0" ci="16" mb="0" cb="0"/><line nr="114" mi="0" ci="12" mb="0" cb="0"/><line nr="115" mi="0" ci="13" mb="0" cb="2"/><line nr="116" mi="0" ci="13" mb="0" cb="0"/><line nr="117" mi="0" ci="22" mb="0" cb="2"/><line nr="118" mi="0" ci="24" mb="0" cb="2"/><line nr="119" mi="0" ci="15" mb="0" cb="0"/><line nr="120" mi="0" ci="7" mb="0" cb="4"/><line nr="121" mi="0" ci="8" mb="0" cb="0"/><line nr="123" mi="0" ci="8" mb="0" cb="2"/><line nr="124" mi="0" ci="14" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="29" mb="0" cb="8"/><line nr="128" mi="0" ci="10" mb="0" cb="0"/><line nr="129" mi="0" ci="9" mb="0" cb="0"/><line nr="130" mi="0" ci="12" mb="0" cb="2"/><line nr="131" mi="0" ci="18" mb="0" cb="0"/><line nr="135" mi="0" ci="16" mb="0" cb="0"/><line nr="136" mi="0" ci="14" mb="0" cb="0"/><line nr="137" mi="2" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="13" mb="0" cb="4"/><line nr="142" mi="0" ci="16" mb="0" cb="0"/><line nr="144" mi="0" ci="10" mb="0" cb="0"/><line nr="145" mi="0" ci="18" mb="0" cb="0"/><line nr="146" mi="0" ci="8" mb="0" cb="2"/><line nr="147" mi="0" ci="30" mb="0" cb="0"/><line nr="148" mi="0" ci="30" mb="0" cb="0"/><line nr="149" mi="0" ci="14" mb="0" cb="0"/><line nr="151" mi="2" ci="11" mb="0" cb="0"/><line nr="153" mi="2" ci="14" mb="0" cb="0"/><line nr="157" mi="0" ci="4" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="159" mi="0" ci="8" mb="0" cb="2"/><line nr="160" mi="0" ci="14" mb="0" cb="0"/><line nr="161" mi="3" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="8" mb="0" cb="2"/><line nr="163" mi="0" ci="14" mb="0" cb="0"/><line nr="164" mi="3" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="8" mb="0" cb="2"/><line nr="166" mi="0" ci="21" mb="0" cb="0"/><line nr="167" mi="0" ci="21" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="2"/><line nr="169" mi="0" ci="15" mb="0" cb="0"/><line nr="171" mi="0" ci="14" mb="0" cb="0"/><line nr="173" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="2" ci="2" mb="0" cb="0"/><line nr="179" mi="0" ci="11" mb="0" cb="4"/><line nr="180" mi="0" ci="8" mb="0" cb="0"/><line nr="182" mi="0" ci="7" mb="0" cb="4"/><line nr="183" mi="0" ci="8" mb="0" cb="0"/><line nr="185" mi="0" ci="8" mb="0" cb="0"/><line nr="186" mi="0" ci="11" mb="0" cb="0"/><line nr="187" mi="0" ci="8" mb="0" cb="2"/><line nr="188" mi="0" ci="18" mb="0" cb="0"/><line nr="189" mi="0" ci="7" mb="0" cb="4"/><line nr="190" mi="0" ci="8" mb="0" cb="0"/><line nr="192" mi="0" ci="8" mb="0" cb="2"/><line nr="193" mi="0" ci="16" mb="0" cb="0"/><line nr="194" mi="0" ci="14" mb="0" cb="0"/><line nr="195" mi="0" ci="2" mb="0" cb="0"/><line nr="198" mi="0" ci="16" mb="0" cb="0"/><line nr="199" mi="0" ci="9" mb="0" cb="0"/><line nr="200" mi="0" ci="7" mb="0" cb="0"/><line nr="201" mi="0" ci="11" mb="0" cb="4"/><line nr="202" mi="0" ci="8" mb="0" cb="0"/><line nr="203" mi="0" ci="10" mb="0" cb="0"/><line nr="204" mi="0" ci="12" mb="0" cb="0"/><line nr="205" mi="0" ci="13" mb="0" cb="2"/><line nr="206" mi="0" ci="13" mb="0" cb="0"/><line nr="207" mi="0" ci="22" mb="0" cb="2"/><line nr="208" mi="0" ci="29" mb="0" cb="8"/><line nr="209" mi="0" ci="18" mb="0" cb="0"/><line nr="210" mi="0" ci="7" mb="0" cb="4"/><line nr="211" mi="0" ci="8" mb="0" cb="0"/><line nr="213" mi="0" ci="16" mb="0" cb="0"/><line nr="214" mi="0" ci="8" mb="0" cb="2"/><line nr="215" mi="0" ci="10" mb="0" cb="0"/><line nr="216" mi="0" ci="14" mb="0" cb="0"/><line nr="217" mi="0" ci="2" mb="0" cb="0"/><line nr="219" mi="0" ci="23" mb="0" cb="0"/><line nr="222" mi="0" ci="17" mb="0" cb="0"/><line nr="224" mi="0" ci="14" mb="0" cb="0"/><line nr="225" mi="2" ci="2" mb="0" cb="0"/><line nr="229" mi="0" ci="8" mb="0" cb="0"/><line nr="230" mi="0" ci="11" mb="0" cb="0"/><line nr="231" mi="0" ci="8" mb="0" cb="2"/><line nr="232" mi="0" ci="23" mb="0" cb="0"/><line nr="233" mi="0" ci="7" mb="0" cb="4"/><line nr="234" mi="0" ci="8" mb="0" cb="0"/><line nr="236" mi="0" ci="8" mb="0" cb="2"/><line nr="237" mi="0" ci="16" mb="0" cb="0"/><line nr="238" mi="0" ci="14" mb="0" cb="0"/><line nr="239" mi="0" ci="2" mb="0" cb="0"/><line nr="242" mi="0" ci="16" mb="0" cb="0"/><line nr="244" mi="0" ci="12" mb="0" cb="0"/><line nr="245" mi="0" ci="13" mb="0" cb="2"/><line nr="246" mi="0" ci="13" mb="0" cb="0"/><line nr="247" mi="0" ci="22" mb="0" cb="2"/><line nr="248" mi="0" ci="29" mb="1" cb="7"/><line nr="249" mi="0" ci="16" mb="0" cb="0"/><line nr="250" mi="0" ci="10" mb="0" cb="0"/><line nr="251" mi="0" ci="9" mb="0" cb="0"/><line nr="252" mi="0" ci="12" mb="0" cb="2"/><line nr="253" mi="0" ci="18" mb="0" cb="0"/><line nr="257" mi="0" ci="16" mb="0" cb="0"/><line nr="258" mi="0" ci="14" mb="0" cb="0"/><line nr="259" mi="2" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="71" covered="1970"/><counter type="BRANCH" missed="1" covered="139"/><counter type="LINE" missed="0" covered="157"/><counter type="COMPLEXITY" missed="5" covered="78"/><counter type="METHOD" missed="4" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="1981" covered="9521"/><counter type="BRANCH" missed="56" covered="446"/><counter type="LINE" missed="22" covered="524"/><counter type="COMPLEXITY" missed="167" covered="460"/><counter type="METHOD" missed="115" covered="261"/><counter type="CLASS" missed="0" covered="42"/></package><counter type="INSTRUCTION" missed="2642" covered="11217"/><counter type="BRANCH" missed="64" covered="504"/><counter type="LINE" missed="43" covered="623"/><counter type="COMPLEXITY" missed="201" covered="560"/><counter type="METHOD" missed="142" covered="335"/><counter type="CLASS" missed="2" covered="63"/></report>