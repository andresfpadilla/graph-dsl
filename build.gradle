import static com.github.amkay.gradle.gitflow.version.VersionType.*

buildscript {
    dependencies {
        classpath 'com.github.amkay:gradle-gitflow:0.2.0'
    }
}

plugins {
    id 'net.ossindex.audit' version '0.1.1'
    id 'io.codearte.nexus-staging' version '0.8.0'
    id 'org.sonarqube' version '2.4'
}

apply plugin: 'idea'
apply plugin: 'com.github.amkay.gitflow'
apply plugin: 'jacoco'
apply plugin: 'groovy'
apply plugin: 'codenarc'
apply plugin: 'maven'
apply plugin: 'signing'

group = 'com.github.moaxcp'
description = 'A groovy dsl for creating and traversing graphs.'

sourceCompatibility = 1.8
targetCompatibility = 1.8
ext.groovyVersion = '2.5.0-alpha-1'

jacocoTestReport {
    dependsOn test
}

gradle.taskGraph.whenReady { graph ->
    if (graph.hasTask(':jacocoTestReport') || graph.hasTask(':sonarqube')) {
        compileGroovy.groovyOptions.optimizationOptions.all = false
        logger.warn 'all groovy optimizations are turned off for jacoco'
    }
}

codenarc {
    ignoreFailures = true
    configFile = file 'config/codenarc/codenarc.groovy'
}

repositories {
    jcenter()
}

configurations {
    codnarc {
        extendsFrom compile
    }
}

groovydoc {
    link 'https://docs.oracle.com/javase/8/docs/api/', 'java', 'javax', 'org'
    link "http://docs.groovy-lang.org/docs/groovy-$groovyVersion/html/api/", 'groovy', 'org'
}

task sourceJar(type: Jar) {
    from sourceSets.main.allGroovy
    classifier = 'sources'
}

task groovyDocJar(type: Jar, dependsOn: groovydoc) {
    from groovydoc.destinationDir
    classifier = 'groovydoc'
}

task javaDocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

artifacts {
    archives jar
    archives sourceJar
    archives groovyDocJar
    archives javaDocJar
}

signing {
    required = true
    sign configurations.archives
}

if(!project.hasProperty('releaseType')) {
    ext.releaseType = 'RELEASE'
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment ->
                signing.signPom(deployment)
            }

            def publishUrl = ''
            if(releaseType == 'RELEASE') {
                publishUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
            } else if(releaseType == 'SNAPSHOT') {
                publishUrl = 'https://oss.sonatype.org/content/repositories/snapshots'
            }

            repository(url: publishUrl) {
                authentication(userName: System.getProperty('nexus.username'), password: System.getProperty('nexus.password'))
            }

            pom.project {
                name project.name
                description project.description
                packaging 'jar'
                url 'https://github.com/moaxcp/graph-dsl'
                scm {
                    connection 'scm:git:git://github.com/moaxcp/graph-dsl.git'
                    developerConnection 'scm:git:git@github.com:moaxcp/graph-dsl.git'
                    url 'https://github.com/moaxcp/graph-dsl'
                }
                licenses {
                    license {
                        name 'The MIT License (MIT)'
                        url 'http://opensource.org/licenses/MIT'
                        distribution 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'moaxcp'
                        name = 'John Mercier'
                        email = 'moaxcp@gmail.com'
                    }
                }
            }
        }
    }
}

nexusStaging {
    username = System.getProperty('nexus.username')
    password = System.getProperty('nexus.password')
    numberOfRetries = 10
    delayBetweenRetriesInMillis = 10000
}

dependencies {
    compile "org.codehaus.groovy:groovy:$groovyVersion"
    testCompile ('org.spockframework:spock-core:1.1-groovy-2.4') {
        exclude group: 'org.codehaus.groovy', module:'groovy-all'
    }
    testCompile "org.codehaus.groovy:groovy-all:$groovyVersion"
}